
/*
 * This file was generated by the SOM Compiler.
 * FileName: include\cwimage.ih.
 * Generated using:
 *     SOM Precompiler somipc: 2.29.1.7
 *     SOM Emitter emitih: 2.42
 */

/*
 *   Module Header
 * 
 *   Module Name: CWImage
 * 
 *   OS/2 Presentation Manager Workplace class definitions
 * 
 * 
 */


/*
 * -- By default, for classes declared using IDL,
 * -- this emitter doesn't define redispatch/apply stubs.
 * -- Instead, it requests that the SOM kernel produce them.
 * -- To override this default, use the "notc" modifier.
 */

#ifndef SOM_CWImage_ih
#define SOM_CWImage_ih

#pragma checkout(suspend)

#include <cwimage.h>

/*
 * Set the scope of methods functions
 */
#ifndef SOM_Scope
#ifdef __cplusplus
  #define SOM_Scope extern "C"
#else
  #define SOM_Scope extern
#endif  /* __cplusplus */
#endif  /* SOM_Scope */

#ifndef SOM_CurrentClass
    #define SOM_CurrentClass CWImageCClassData.parentMtab
#endif  /* SOM_CurrentClass */

#define CWImage_MaxNoMethods 4

/*
 * -- Instance data
 */
typedef struct {
	HBITMAP hBitmap;
	HBITMAP hBitmapSmall;
	ULONG ulSizeSmallBitmap;
	PBYTE pBmpInfoHeader2;
	char chrIOProcName[64];
	BOOL bNoIOProcAvailable;
	BOOL bUseNewClsFeatures;
} CWImageData;

/*
 * GetData macro
 */

/*
 * -- This emitter treats Data Tokens as Thunks by default.
 * -- Use the sc modifier "nothunks" to override this default.
 */
typedef CWImageData* SOMLINK somTP_CWImage_DataThunk(void*);
#ifdef __IBMC__
#pragma linkage(somTP_CWImage_DataThunk, system)
#endif
typedef somTP_CWImage_DataThunk *somTD_CWImage_DataThunk;

#define CWImageGetData(somSelf) \
   (((somTD_CWImage_DataThunk)(CWImageCClassData.instanceDataToken))(somSelf))

/*
 * Instance variable and staticdata access macros
 */
#ifndef NO_VARIABLE_MACROS
#define _hBitmap (somThis->hBitmap)
#define _hBitmapSmall (somThis->hBitmapSmall)
#define _ulSizeSmallBitmap (somThis->ulSizeSmallBitmap)
#define _pBmpInfoHeader2 (somThis->pBmpInfoHeader2)
#define _chrIOProcName (somThis->chrIOProcName)
#define _bNoIOProcAvailable (somThis->bNoIOProcAvailable)
#define _bUseNewClsFeatures (somThis->bUseNewClsFeatures)
#endif

/*
 * Primary Implementation File Support
 */
#if (defined(CWImage_Class_Source) || defined(SOM_Module_cwimage_Source))

/*
 * Trace/Debug macro
 */
#ifndef CWImageMethodDebug
   #define CWImageMethodDebug(c,m) SOMMethodDebug(c,m)
#endif  /* CWImageMethodDebug */

/*
 * Current class macros for Instance and Meta classes.
 */
#undef SOMMeta
#define SOMMeta M_CWImageCClassData.parentMtab
#undef SOMInstance
#define SOMInstance CWImageCClassData.parentMtab

#ifndef M_CWImage_Class_Source
   #define M_CWImage_Class_Source
#endif    /* M_CWImage_Class_Source */

/*
 * Overridden method: wpQueryBitmapHandle
 */
#pragma linkage(cwimg_wpQueryBitmapHandle, system)
SOM_Scope BOOL  SOMLINK cwimg_wpQueryBitmapHandle(CWImage *somSelf,
		HBITMAP* phBitmap,
		HPAL* phPalette,
		ULONG ulWidth,
		ULONG ulHeight,
		ULONG ulFlags,
		long lBackgroundColor,
		BOOL* pbQuitEarly);
static char *somMN_CWImagewpQueryBitmapHandle = "WPImageFile::wpQueryBitmapHandle";
static somId somId_CWImagewpQueryBitmapHandle = &somMN_CWImagewpQueryBitmapHandle;
#ifdef somId_wpQueryBitmapHandle
#undef somId_wpQueryBitmapHandle
#else
#define somId_wpQueryBitmapHandle somId_CWImagewpQueryBitmapHandle
#endif
static somMethodProc* CWImage_parent_WPImageFile_wpQueryBitmapHandle_resolved;
#define CWImage_parent_WPImageFile_wpQueryBitmapHandle(somSelf,phBitmap,phPalette,ulWidth,ulHeight,ulFlags,lBackgroundColor,pbQuitEarly) \
  ((( somTD_WPImageFile_wpQueryBitmapHandle ) \
    CWImage_parent_WPImageFile_wpQueryBitmapHandle_resolved) \
	 (somSelf,phBitmap,phPalette,ulWidth,ulHeight,ulFlags,lBackgroundColor,pbQuitEarly))
#ifndef SOMGD_pmc_WPImageFile_wpQueryBitmapHandle
  #ifdef parent_WPImageFile_wpQueryBitmapHandle
     #undef parent_WPImageFile_wpQueryBitmapHandle
     #define SOMGD_pmc_WPImageFile_wpQueryBitmapHandle 1
  #else
     #define parent_WPImageFile_wpQueryBitmapHandle CWImage_parent_WPImageFile_wpQueryBitmapHandle
  #endif /* parent_WPImageFile_wpQueryBitmapHandle */
#endif /* SOMGD_pmc_WPImageFile_wpQueryBitmapHandle */
#ifndef parent_wpQueryBitmapHandle
     #define parent_wpQueryBitmapHandle CWImage_parent_WPImageFile_wpQueryBitmapHandle
#endif  /* parent_wpQueryBitmapHandle */
#define CWImage_parents_wpQueryBitmapHandle(somSelf,phBitmap,phPalette,ulWidth,ulHeight,ulFlags,lBackgroundColor,pbQuitEarly) (\
   CWImage_parent_WPImageFile_wpQueryBitmapHandle(somSelf,phBitmap,phPalette,ulWidth,ulHeight,ulFlags,lBackgroundColor,pbQuitEarly))

/*
 * Overridden method: wpQueryBitmapInfoHeader
 */
#pragma linkage(cwimg_wpQueryBitmapInfoHeader, system)
SOM_Scope PBYTE  SOMLINK cwimg_wpQueryBitmapInfoHeader(CWImage *somSelf);
static char *somMN_CWImagewpQueryBitmapInfoHeader = "WPImageFile::wpQueryBitmapInfoHeader";
static somId somId_CWImagewpQueryBitmapInfoHeader = &somMN_CWImagewpQueryBitmapInfoHeader;
#ifdef somId_wpQueryBitmapInfoHeader
#undef somId_wpQueryBitmapInfoHeader
#else
#define somId_wpQueryBitmapInfoHeader somId_CWImagewpQueryBitmapInfoHeader
#endif
static somMethodProc* CWImage_parent_WPImageFile_wpQueryBitmapInfoHeader_resolved;
#define CWImage_parent_WPImageFile_wpQueryBitmapInfoHeader(somSelf) \
  ((( somTD_WPImageFile_wpQueryBitmapInfoHeader ) \
    CWImage_parent_WPImageFile_wpQueryBitmapInfoHeader_resolved) \
	 (somSelf))
#ifndef SOMGD_pmc_WPImageFile_wpQueryBitmapInfoHeader
  #ifdef parent_WPImageFile_wpQueryBitmapInfoHeader
     #undef parent_WPImageFile_wpQueryBitmapInfoHeader
     #define SOMGD_pmc_WPImageFile_wpQueryBitmapInfoHeader 1
  #else
     #define parent_WPImageFile_wpQueryBitmapInfoHeader CWImage_parent_WPImageFile_wpQueryBitmapInfoHeader
  #endif /* parent_WPImageFile_wpQueryBitmapInfoHeader */
#endif /* SOMGD_pmc_WPImageFile_wpQueryBitmapInfoHeader */
#ifndef parent_wpQueryBitmapInfoHeader
     #define parent_wpQueryBitmapInfoHeader CWImage_parent_WPImageFile_wpQueryBitmapInfoHeader
#endif  /* parent_wpQueryBitmapInfoHeader */
#define CWImage_parents_wpQueryBitmapInfoHeader(somSelf) (\
   CWImage_parent_WPImageFile_wpQueryBitmapInfoHeader(somSelf))

/*
 * Overridden method: wpQueryBitmapData
 */
#pragma linkage(cwimg_wpQueryBitmapData, system)
SOM_Scope PBYTE  SOMLINK cwimg_wpQueryBitmapData(CWImage *somSelf,
		ULONG* pulSize);
static char *somMN_CWImagewpQueryBitmapData = "WPImageFile::wpQueryBitmapData";
static somId somId_CWImagewpQueryBitmapData = &somMN_CWImagewpQueryBitmapData;
#ifdef somId_wpQueryBitmapData
#undef somId_wpQueryBitmapData
#else
#define somId_wpQueryBitmapData somId_CWImagewpQueryBitmapData
#endif
static somMethodProc* CWImage_parent_WPImageFile_wpQueryBitmapData_resolved;
#define CWImage_parent_WPImageFile_wpQueryBitmapData(somSelf,pulSize) \
  ((( somTD_WPImageFile_wpQueryBitmapData ) \
    CWImage_parent_WPImageFile_wpQueryBitmapData_resolved) \
	 (somSelf,pulSize))
#ifndef SOMGD_pmc_WPImageFile_wpQueryBitmapData
  #ifdef parent_WPImageFile_wpQueryBitmapData
     #undef parent_WPImageFile_wpQueryBitmapData
     #define SOMGD_pmc_WPImageFile_wpQueryBitmapData 1
  #else
     #define parent_WPImageFile_wpQueryBitmapData CWImage_parent_WPImageFile_wpQueryBitmapData
  #endif /* parent_WPImageFile_wpQueryBitmapData */
#endif /* SOMGD_pmc_WPImageFile_wpQueryBitmapData */
#ifndef parent_wpQueryBitmapData
     #define parent_wpQueryBitmapData CWImage_parent_WPImageFile_wpQueryBitmapData
#endif  /* parent_wpQueryBitmapData */
#define CWImage_parents_wpQueryBitmapData(somSelf,pulSize) (\
   CWImage_parent_WPImageFile_wpQueryBitmapData(somSelf,pulSize))

/*
 * Overridden method: wpSetBitmapData
 */
#pragma linkage(cwimg_wpSetBitmapData, system)
SOM_Scope BOOL  SOMLINK cwimg_wpSetBitmapData(CWImage *somSelf,
		PBYTE pBitmapData,
		ULONG ulSize);
static char *somMN_CWImagewpSetBitmapData = "WPImageFile::wpSetBitmapData";
static somId somId_CWImagewpSetBitmapData = &somMN_CWImagewpSetBitmapData;
#ifdef somId_wpSetBitmapData
#undef somId_wpSetBitmapData
#else
#define somId_wpSetBitmapData somId_CWImagewpSetBitmapData
#endif
static somMethodProc* CWImage_parent_WPImageFile_wpSetBitmapData_resolved;
#define CWImage_parent_WPImageFile_wpSetBitmapData(somSelf,pBitmapData,ulSize) \
  ((( somTD_WPImageFile_wpSetBitmapData ) \
    CWImage_parent_WPImageFile_wpSetBitmapData_resolved) \
	 (somSelf,pBitmapData,ulSize))
#ifndef SOMGD_pmc_WPImageFile_wpSetBitmapData
  #ifdef parent_WPImageFile_wpSetBitmapData
     #undef parent_WPImageFile_wpSetBitmapData
     #define SOMGD_pmc_WPImageFile_wpSetBitmapData 1
  #else
     #define parent_WPImageFile_wpSetBitmapData CWImage_parent_WPImageFile_wpSetBitmapData
  #endif /* parent_WPImageFile_wpSetBitmapData */
#endif /* SOMGD_pmc_WPImageFile_wpSetBitmapData */
#ifndef parent_wpSetBitmapData
     #define parent_wpSetBitmapData CWImage_parent_WPImageFile_wpSetBitmapData
#endif  /* parent_wpSetBitmapData */
#define CWImage_parents_wpSetBitmapData(somSelf,pBitmapData,ulSize) (\
   CWImage_parent_WPImageFile_wpSetBitmapData(somSelf,pBitmapData,ulSize))

/*
 * Overridden method: wpReadImageFile
 */
#pragma linkage(cwimg_wpReadImageFile, system)
SOM_Scope BOOL  SOMLINK cwimg_wpReadImageFile(CWImage *somSelf);
static char *somMN_CWImagewpReadImageFile = "WPImageFile::wpReadImageFile";
static somId somId_CWImagewpReadImageFile = &somMN_CWImagewpReadImageFile;
#ifdef somId_wpReadImageFile
#undef somId_wpReadImageFile
#else
#define somId_wpReadImageFile somId_CWImagewpReadImageFile
#endif
static somMethodProc* CWImage_parent_WPImageFile_wpReadImageFile_resolved;
#define CWImage_parent_WPImageFile_wpReadImageFile(somSelf) \
  ((( somTD_WPImageFile_wpReadImageFile ) \
    CWImage_parent_WPImageFile_wpReadImageFile_resolved) \
	 (somSelf))
#ifndef SOMGD_pmc_WPImageFile_wpReadImageFile
  #ifdef parent_WPImageFile_wpReadImageFile
     #undef parent_WPImageFile_wpReadImageFile
     #define SOMGD_pmc_WPImageFile_wpReadImageFile 1
  #else
     #define parent_WPImageFile_wpReadImageFile CWImage_parent_WPImageFile_wpReadImageFile
  #endif /* parent_WPImageFile_wpReadImageFile */
#endif /* SOMGD_pmc_WPImageFile_wpReadImageFile */
#ifndef parent_wpReadImageFile
     #define parent_wpReadImageFile CWImage_parent_WPImageFile_wpReadImageFile
#endif  /* parent_wpReadImageFile */
#define CWImage_parents_wpReadImageFile(somSelf) (\
   CWImage_parent_WPImageFile_wpReadImageFile(somSelf))

/*
 * Overridden method: wpWriteImageFile
 */
#pragma linkage(cwimg_wpWriteImageFile, system)
SOM_Scope BOOL  SOMLINK cwimg_wpWriteImageFile(CWImage *somSelf);
static char *somMN_CWImagewpWriteImageFile = "WPImageFile::wpWriteImageFile";
static somId somId_CWImagewpWriteImageFile = &somMN_CWImagewpWriteImageFile;
#ifdef somId_wpWriteImageFile
#undef somId_wpWriteImageFile
#else
#define somId_wpWriteImageFile somId_CWImagewpWriteImageFile
#endif
static somMethodProc* CWImage_parent_WPImageFile_wpWriteImageFile_resolved;
#define CWImage_parent_WPImageFile_wpWriteImageFile(somSelf) \
  ((( somTD_WPImageFile_wpWriteImageFile ) \
    CWImage_parent_WPImageFile_wpWriteImageFile_resolved) \
	 (somSelf))
#ifndef SOMGD_pmc_WPImageFile_wpWriteImageFile
  #ifdef parent_WPImageFile_wpWriteImageFile
     #undef parent_WPImageFile_wpWriteImageFile
     #define SOMGD_pmc_WPImageFile_wpWriteImageFile 1
  #else
     #define parent_WPImageFile_wpWriteImageFile CWImage_parent_WPImageFile_wpWriteImageFile
  #endif /* parent_WPImageFile_wpWriteImageFile */
#endif /* SOMGD_pmc_WPImageFile_wpWriteImageFile */
#ifndef parent_wpWriteImageFile
     #define parent_wpWriteImageFile CWImage_parent_WPImageFile_wpWriteImageFile
#endif  /* parent_wpWriteImageFile */
#define CWImage_parents_wpWriteImageFile(somSelf) (\
   CWImage_parent_WPImageFile_wpWriteImageFile(somSelf))

/*
 * Overridden method: wpUnInitData
 */
#pragma linkage(cwimg_wpUnInitData, system)
SOM_Scope void  SOMLINK cwimg_wpUnInitData(CWImage *somSelf);
static char *somMN_CWImagewpUnInitData = "WPObject::wpUnInitData";
static somId somId_CWImagewpUnInitData = &somMN_CWImagewpUnInitData;
#ifdef somId_wpUnInitData
#undef somId_wpUnInitData
#else
#define somId_wpUnInitData somId_CWImagewpUnInitData
#endif
static somMethodProc* CWImage_parent_WPImageFile_wpUnInitData_resolved;
#define CWImage_parent_WPImageFile_wpUnInitData(somSelf) \
  ((( somTD_WPObject_wpUnInitData ) \
    CWImage_parent_WPImageFile_wpUnInitData_resolved) \
	 (somSelf))
#ifndef SOMGD_pmc_WPImageFile_wpUnInitData
  #ifdef parent_WPImageFile_wpUnInitData
     #undef parent_WPImageFile_wpUnInitData
     #define SOMGD_pmc_WPImageFile_wpUnInitData 1
  #else
     #define parent_WPImageFile_wpUnInitData CWImage_parent_WPImageFile_wpUnInitData
  #endif /* parent_WPImageFile_wpUnInitData */
#endif /* SOMGD_pmc_WPImageFile_wpUnInitData */
#ifndef parent_wpUnInitData
     #define parent_wpUnInitData CWImage_parent_WPImageFile_wpUnInitData
#endif  /* parent_wpUnInitData */
#define CWImage_parents_wpUnInitData(somSelf) (\
   CWImage_parent_WPImageFile_wpUnInitData(somSelf))

/*
 * Overridden method: wpModifyPopupMenu
 */
#pragma linkage(cwimg_wpModifyPopupMenu, system)
SOM_Scope BOOL  SOMLINK cwimg_wpModifyPopupMenu(CWImage *somSelf,
		HWND hwndMenu,
		HWND hwndCnr,
		ULONG iPosition);
static char *somMN_CWImagewpModifyPopupMenu = "WPObject::wpModifyPopupMenu";
static somId somId_CWImagewpModifyPopupMenu = &somMN_CWImagewpModifyPopupMenu;
#ifdef somId_wpModifyPopupMenu
#undef somId_wpModifyPopupMenu
#else
#define somId_wpModifyPopupMenu somId_CWImagewpModifyPopupMenu
#endif
static somMethodProc* CWImage_parent_WPImageFile_wpModifyPopupMenu_resolved;
#define CWImage_parent_WPImageFile_wpModifyPopupMenu(somSelf,hwndMenu,hwndCnr,iPosition) \
  ((( somTD_WPObject_wpModifyPopupMenu ) \
    CWImage_parent_WPImageFile_wpModifyPopupMenu_resolved) \
	 (somSelf,hwndMenu,hwndCnr,iPosition))
#ifndef SOMGD_pmc_WPImageFile_wpModifyPopupMenu
  #ifdef parent_WPImageFile_wpModifyPopupMenu
     #undef parent_WPImageFile_wpModifyPopupMenu
     #define SOMGD_pmc_WPImageFile_wpModifyPopupMenu 1
  #else
     #define parent_WPImageFile_wpModifyPopupMenu CWImage_parent_WPImageFile_wpModifyPopupMenu
  #endif /* parent_WPImageFile_wpModifyPopupMenu */
#endif /* SOMGD_pmc_WPImageFile_wpModifyPopupMenu */
#ifndef parent_wpModifyPopupMenu
     #define parent_wpModifyPopupMenu CWImage_parent_WPImageFile_wpModifyPopupMenu
#endif  /* parent_wpModifyPopupMenu */
#define CWImage_parents_wpModifyPopupMenu(somSelf,hwndMenu,hwndCnr,iPosition) (\
   CWImage_parent_WPImageFile_wpModifyPopupMenu(somSelf,hwndMenu,hwndCnr,iPosition))

/*
 * Overridden method: wpMenuItemSelected
 */
#pragma linkage(cwimg_wpMenuItemSelected, system)
SOM_Scope BOOL  SOMLINK cwimg_wpMenuItemSelected(CWImage *somSelf,
		HWND hwndFrame,
		ULONG ulMenuId);
static char *somMN_CWImagewpMenuItemSelected = "WPObject::wpMenuItemSelected";
static somId somId_CWImagewpMenuItemSelected = &somMN_CWImagewpMenuItemSelected;
#ifdef somId_wpMenuItemSelected
#undef somId_wpMenuItemSelected
#else
#define somId_wpMenuItemSelected somId_CWImagewpMenuItemSelected
#endif
static somMethodProc* CWImage_parent_WPImageFile_wpMenuItemSelected_resolved;
#define CWImage_parent_WPImageFile_wpMenuItemSelected(somSelf,hwndFrame,ulMenuId) \
  ((( somTD_WPObject_wpMenuItemSelected ) \
    CWImage_parent_WPImageFile_wpMenuItemSelected_resolved) \
	 (somSelf,hwndFrame,ulMenuId))
#ifndef SOMGD_pmc_WPImageFile_wpMenuItemSelected
  #ifdef parent_WPImageFile_wpMenuItemSelected
     #undef parent_WPImageFile_wpMenuItemSelected
     #define SOMGD_pmc_WPImageFile_wpMenuItemSelected 1
  #else
     #define parent_WPImageFile_wpMenuItemSelected CWImage_parent_WPImageFile_wpMenuItemSelected
  #endif /* parent_WPImageFile_wpMenuItemSelected */
#endif /* SOMGD_pmc_WPImageFile_wpMenuItemSelected */
#ifndef parent_wpMenuItemSelected
     #define parent_wpMenuItemSelected CWImage_parent_WPImageFile_wpMenuItemSelected
#endif  /* parent_wpMenuItemSelected */
#define CWImage_parents_wpMenuItemSelected(somSelf,hwndFrame,ulMenuId) (\
   CWImage_parent_WPImageFile_wpMenuItemSelected(somSelf,hwndFrame,ulMenuId))

/*
 * Overridden method: wpOpen
 */
#pragma linkage(cwimg_wpOpen, system)
SOM_Scope HWND  SOMLINK cwimg_wpOpen(CWImage *somSelf,
		HWND hwndCnr,
		ULONG ulView,
		ULONG param);
static char *somMN_CWImagewpOpen = "WPObject::wpOpen";
static somId somId_CWImagewpOpen = &somMN_CWImagewpOpen;
#ifdef somId_wpOpen
#undef somId_wpOpen
#else
#define somId_wpOpen somId_CWImagewpOpen
#endif
static somMethodProc* CWImage_parent_WPImageFile_wpOpen_resolved;
#define CWImage_parent_WPImageFile_wpOpen(somSelf,hwndCnr,ulView,param) \
  ((( somTD_WPObject_wpOpen ) \
    CWImage_parent_WPImageFile_wpOpen_resolved) \
	 (somSelf,hwndCnr,ulView,param))
#ifndef SOMGD_pmc_WPImageFile_wpOpen
  #ifdef parent_WPImageFile_wpOpen
     #undef parent_WPImageFile_wpOpen
     #define SOMGD_pmc_WPImageFile_wpOpen 1
  #else
     #define parent_WPImageFile_wpOpen CWImage_parent_WPImageFile_wpOpen
  #endif /* parent_WPImageFile_wpOpen */
#endif /* SOMGD_pmc_WPImageFile_wpOpen */
#ifndef parent_wpOpen
     #define parent_wpOpen CWImage_parent_WPImageFile_wpOpen
#endif  /* parent_wpOpen */
#define CWImage_parents_wpOpen(somSelf,hwndCnr,ulView,param) (\
   CWImage_parent_WPImageFile_wpOpen(somSelf,hwndCnr,ulView,param))

/*
 * Overridden method: wpAddSettingsPages
 */
#pragma linkage(cwimg_wpAddSettingsPages, system)
SOM_Scope BOOL  SOMLINK cwimg_wpAddSettingsPages(CWImage *somSelf,
		HWND hwndNotebook);
static char *somMN_CWImagewpAddSettingsPages = "WPObject::wpAddSettingsPages";
static somId somId_CWImagewpAddSettingsPages = &somMN_CWImagewpAddSettingsPages;
#ifdef somId_wpAddSettingsPages
#undef somId_wpAddSettingsPages
#else
#define somId_wpAddSettingsPages somId_CWImagewpAddSettingsPages
#endif
static somMethodProc* CWImage_parent_WPImageFile_wpAddSettingsPages_resolved;
#define CWImage_parent_WPImageFile_wpAddSettingsPages(somSelf,hwndNotebook) \
  ((( somTD_WPObject_wpAddSettingsPages ) \
    CWImage_parent_WPImageFile_wpAddSettingsPages_resolved) \
	 (somSelf,hwndNotebook))
#ifndef SOMGD_pmc_WPImageFile_wpAddSettingsPages
  #ifdef parent_WPImageFile_wpAddSettingsPages
     #undef parent_WPImageFile_wpAddSettingsPages
     #define SOMGD_pmc_WPImageFile_wpAddSettingsPages 1
  #else
     #define parent_WPImageFile_wpAddSettingsPages CWImage_parent_WPImageFile_wpAddSettingsPages
  #endif /* parent_WPImageFile_wpAddSettingsPages */
#endif /* SOMGD_pmc_WPImageFile_wpAddSettingsPages */
#ifndef parent_wpAddSettingsPages
     #define parent_wpAddSettingsPages CWImage_parent_WPImageFile_wpAddSettingsPages
#endif  /* parent_wpAddSettingsPages */
#define CWImage_parents_wpAddSettingsPages(somSelf,hwndNotebook) (\
   CWImage_parent_WPImageFile_wpAddSettingsPages(somSelf,hwndNotebook))

/*
 * Overridden method: wpQueryDetailsData
 */
#pragma linkage(cwimg_wpQueryDetailsData, system)
SOM_Scope ULONG  SOMLINK cwimg_wpQueryDetailsData(CWImage *somSelf,
		PVOID* ppDetailsData,
		PULONG pcp);
static char *somMN_CWImagewpQueryDetailsData = "WPObject::wpQueryDetailsData";
static somId somId_CWImagewpQueryDetailsData = &somMN_CWImagewpQueryDetailsData;
#ifdef somId_wpQueryDetailsData
#undef somId_wpQueryDetailsData
#else
#define somId_wpQueryDetailsData somId_CWImagewpQueryDetailsData
#endif
static somMethodProc* CWImage_parent_WPImageFile_wpQueryDetailsData_resolved;
#define CWImage_parent_WPImageFile_wpQueryDetailsData(somSelf,ppDetailsData,pcp) \
  ((( somTD_WPObject_wpQueryDetailsData ) \
    CWImage_parent_WPImageFile_wpQueryDetailsData_resolved) \
	 (somSelf,ppDetailsData,pcp))
#ifndef SOMGD_pmc_WPImageFile_wpQueryDetailsData
  #ifdef parent_WPImageFile_wpQueryDetailsData
     #undef parent_WPImageFile_wpQueryDetailsData
     #define SOMGD_pmc_WPImageFile_wpQueryDetailsData 1
  #else
     #define parent_WPImageFile_wpQueryDetailsData CWImage_parent_WPImageFile_wpQueryDetailsData
  #endif /* parent_WPImageFile_wpQueryDetailsData */
#endif /* SOMGD_pmc_WPImageFile_wpQueryDetailsData */
#ifndef parent_wpQueryDetailsData
     #define parent_wpQueryDetailsData CWImage_parent_WPImageFile_wpQueryDetailsData
#endif  /* parent_wpQueryDetailsData */
#define CWImage_parents_wpQueryDetailsData(somSelf,ppDetailsData,pcp) (\
   CWImage_parent_WPImageFile_wpQueryDetailsData(somSelf,ppDetailsData,pcp))

/*
 * Overridden method: wpRestoreState
 */
#pragma linkage(cwimg_wpRestoreState, system)
SOM_Scope BOOL  SOMLINK cwimg_wpRestoreState(CWImage *somSelf,
		ULONG ulReserved);
static char *somMN_CWImagewpRestoreState = "WPObject::wpRestoreState";
static somId somId_CWImagewpRestoreState = &somMN_CWImagewpRestoreState;
#ifdef somId_wpRestoreState
#undef somId_wpRestoreState
#else
#define somId_wpRestoreState somId_CWImagewpRestoreState
#endif
static somMethodProc* CWImage_parent_WPImageFile_wpRestoreState_resolved;
#define CWImage_parent_WPImageFile_wpRestoreState(somSelf,ulReserved) \
  ((( somTD_WPObject_wpRestoreState ) \
    CWImage_parent_WPImageFile_wpRestoreState_resolved) \
	 (somSelf,ulReserved))
#ifndef SOMGD_pmc_WPImageFile_wpRestoreState
  #ifdef parent_WPImageFile_wpRestoreState
     #undef parent_WPImageFile_wpRestoreState
     #define SOMGD_pmc_WPImageFile_wpRestoreState 1
  #else
     #define parent_WPImageFile_wpRestoreState CWImage_parent_WPImageFile_wpRestoreState
  #endif /* parent_WPImageFile_wpRestoreState */
#endif /* SOMGD_pmc_WPImageFile_wpRestoreState */
#ifndef parent_wpRestoreState
     #define parent_wpRestoreState CWImage_parent_WPImageFile_wpRestoreState
#endif  /* parent_wpRestoreState */
#define CWImage_parents_wpRestoreState(somSelf,ulReserved) (\
   CWImage_parent_WPImageFile_wpRestoreState(somSelf,ulReserved))

/*
 * Initialize the class data structure
 */
SOMEXTERN struct CWImageClassDataStructure SOMDLINK CWImageClassData = {(SOMAny *) NULL};

/*
 * Define the C class data structure
 */
SOMEXTERN struct CWImageCClassDataStructure SOMDLINK CWImageCClassData = {(somMethodTabs) NULL};

/*
 * New Method: cwmmAddImageInformationPage
 */
#pragma linkage(cwimg_cwmmAddImageInformationPage, system)
SOM_Scope ULONG  SOMLINK cwimg_cwmmAddImageInformationPage(CWImage *somSelf,
		HWND hwndNotebook);
#ifndef somMN_cwmmAddImageInformationPage_defined
#define somMN_cwmmAddImageInformationPage_defined
static char *somMN_cwmmAddImageInformationPage = "cwmmAddImageInformationPage";
static somId somId_cwmmAddImageInformationPage = &somMN_cwmmAddImageInformationPage;
#endif  /* somMN_cwmmAddImageInformationPage_defined */
#ifndef somDS_cwmmAddImageInformationPage_defined
#define somDS_cwmmAddImageInformationPage_defined
static char *somDS_cwmmAddImageInformationPage = "::CWImage::cwmmAddImageInformationPage";
static somId somDI_cwmmAddImageInformationPage = &somDS_cwmmAddImageInformationPage;
#endif  /* somDS_cwmmAddImageInformationPage_defined */
#define cwmmAddImageInformationPage_somApRdDefault

/*
 * New Method: cwmmQuerySmallBitmapHandle
 */
#pragma linkage(cwimg_cwmmQuerySmallBitmapHandle, system)
SOM_Scope HBITMAP  SOMLINK cwimg_cwmmQuerySmallBitmapHandle(CWImage *somSelf,
		ULONG ulSize,
		PMINIRECORDCORE pmrcToRefresh,
		HWND hwndCnr);
#ifndef somMN_cwmmQuerySmallBitmapHandle_defined
#define somMN_cwmmQuerySmallBitmapHandle_defined
static char *somMN_cwmmQuerySmallBitmapHandle = "cwmmQuerySmallBitmapHandle";
static somId somId_cwmmQuerySmallBitmapHandle = &somMN_cwmmQuerySmallBitmapHandle;
#endif  /* somMN_cwmmQuerySmallBitmapHandle_defined */
#ifndef somDS_cwmmQuerySmallBitmapHandle_defined
#define somDS_cwmmQuerySmallBitmapHandle_defined
static char *somDS_cwmmQuerySmallBitmapHandle = "::CWImage::cwmmQuerySmallBitmapHandle";
static somId somDI_cwmmQuerySmallBitmapHandle = &somDS_cwmmQuerySmallBitmapHandle;
#endif  /* somDS_cwmmQuerySmallBitmapHandle_defined */
#define cwmmQuerySmallBitmapHandle_somApRdDefault

/*
 * New Method: cwmmFreeBitmaps
 */
#pragma linkage(cwimg_cwmmFreeBitmaps, system)
SOM_Scope void  SOMLINK cwimg_cwmmFreeBitmaps(CWImage *somSelf);
#ifndef somMN_cwmmFreeBitmaps_defined
#define somMN_cwmmFreeBitmaps_defined
static char *somMN_cwmmFreeBitmaps = "cwmmFreeBitmaps";
static somId somId_cwmmFreeBitmaps = &somMN_cwmmFreeBitmaps;
#endif  /* somMN_cwmmFreeBitmaps_defined */
#ifndef somDS_cwmmFreeBitmaps_defined
#define somDS_cwmmFreeBitmaps_defined
static char *somDS_cwmmFreeBitmaps = "::CWImage::cwmmFreeBitmaps";
static somId somDI_cwmmFreeBitmaps = &somDS_cwmmFreeBitmaps;
#endif  /* somDS_cwmmFreeBitmaps_defined */
#define cwmmFreeBitmaps_somApRdDefault

/*
 * New Method: cwmmFreeSmallBitmap
 */
#pragma linkage(cwimg_cwmmFreeSmallBitmap, system)
SOM_Scope void  SOMLINK cwimg_cwmmFreeSmallBitmap(CWImage *somSelf);
#ifndef somMN_cwmmFreeSmallBitmap_defined
#define somMN_cwmmFreeSmallBitmap_defined
static char *somMN_cwmmFreeSmallBitmap = "cwmmFreeSmallBitmap";
static somId somId_cwmmFreeSmallBitmap = &somMN_cwmmFreeSmallBitmap;
#endif  /* somMN_cwmmFreeSmallBitmap_defined */
#ifndef somDS_cwmmFreeSmallBitmap_defined
#define somDS_cwmmFreeSmallBitmap_defined
static char *somDS_cwmmFreeSmallBitmap = "::CWImage::cwmmFreeSmallBitmap";
static somId somDI_cwmmFreeSmallBitmap = &somDS_cwmmFreeSmallBitmap;
#endif  /* somDS_cwmmFreeSmallBitmap_defined */
#define cwmmFreeSmallBitmap_somApRdDefault

/*
 * Routines and Structures to create the class object
 */


/*
 * Declare the Static Methods table.
 */
static somStaticMethod_t CWImageSM[] = {
    {    &CWImageClassData.cwmmAddImageInformationPage,
         &somId_cwmmAddImageInformationPage,
         &somDI_cwmmAddImageInformationPage,
         (somMethodProc *) cwimg_cwmmAddImageInformationPage,
         (somMethodProc *)((void*)-1),
#ifdef cwmmAddImageInformationPage_somApRdDefault
         0},
#else
         (somMethodProc *) ((void*)&cwmmAddImageInformationPageStubs) },
#endif
    {    &CWImageClassData.cwmmQuerySmallBitmapHandle,
         &somId_cwmmQuerySmallBitmapHandle,
         &somDI_cwmmQuerySmallBitmapHandle,
         (somMethodProc *) cwimg_cwmmQuerySmallBitmapHandle,
         (somMethodProc *)((void*)-1),
#ifdef cwmmQuerySmallBitmapHandle_somApRdDefault
         0},
#else
         (somMethodProc *) ((void*)&cwmmQuerySmallBitmapHandleStubs) },
#endif
    {    &CWImageClassData.cwmmFreeBitmaps,
         &somId_cwmmFreeBitmaps,
         &somDI_cwmmFreeBitmaps,
         (somMethodProc *) cwimg_cwmmFreeBitmaps,
         (somMethodProc *)((void*)-1),
#ifdef cwmmFreeBitmaps_somApRdDefault
         0},
#else
         (somMethodProc *) ((void*)&cwmmFreeBitmapsStubs) },
#endif
    {    &CWImageClassData.cwmmFreeSmallBitmap,
         &somId_cwmmFreeSmallBitmap,
         &somDI_cwmmFreeSmallBitmap,
         (somMethodProc *) cwimg_cwmmFreeSmallBitmap,
         (somMethodProc *)((void*)-1),
#ifdef cwmmFreeSmallBitmap_somApRdDefault
         0},
#else
         (somMethodProc *) ((void*)&cwmmFreeSmallBitmapStubs) },
#endif
};


/*
 * Declare the Override Methods table.
 */
static somOverrideMethod_t CWImageOM[] = {
    {    &somId_CWImagewpQueryBitmapHandle,
         (somMethodProc *) cwimg_wpQueryBitmapHandle    },
    {    &somId_CWImagewpQueryBitmapInfoHeader,
         (somMethodProc *) cwimg_wpQueryBitmapInfoHeader    },
    {    &somId_CWImagewpQueryBitmapData,
         (somMethodProc *) cwimg_wpQueryBitmapData    },
    {    &somId_CWImagewpSetBitmapData,
         (somMethodProc *) cwimg_wpSetBitmapData    },
    {    &somId_CWImagewpReadImageFile,
         (somMethodProc *) cwimg_wpReadImageFile    },
    {    &somId_CWImagewpWriteImageFile,
         (somMethodProc *) cwimg_wpWriteImageFile    },
    {    &somId_CWImagewpUnInitData,
         (somMethodProc *) cwimg_wpUnInitData    },
    {    &somId_CWImagewpModifyPopupMenu,
         (somMethodProc *) cwimg_wpModifyPopupMenu    },
    {    &somId_CWImagewpMenuItemSelected,
         (somMethodProc *) cwimg_wpMenuItemSelected    },
    {    &somId_CWImagewpOpen,
         (somMethodProc *) cwimg_wpOpen    },
    {    &somId_CWImagewpAddSettingsPages,
         (somMethodProc *) cwimg_wpAddSettingsPages    },
    {    &somId_CWImagewpQueryDetailsData,
         (somMethodProc *) cwimg_wpQueryDetailsData    },
    {    &somId_CWImagewpRestoreState,
         (somMethodProc *) cwimg_wpRestoreState    },
};


/*
 *  Initializers for class Ids
 */
static char * somCN_CWImage = "CWImage";
#ifndef somEMC_M_CWImage_defined
#define somEMC_M_CWImage_defined
static char * somEMC_M_CWImage = "M_CWImage";
#endif
static char * somPCN_CWImage_WPImageFile = "WPImageFile";

static somId somPCCWImage[] = {
    &somPCN_CWImage_WPImageFile,
};

static somStaticClassInfo CWImageSCI = {
    4, 4, 13, 0, 0, 0,
    CWImage_MajorVersion, CWImage_MinorVersion,
    sizeof(CWImageData), CWImage_MaxNoMethods, 1,
    &somCN_CWImage,
    &somEMC_M_CWImage, 0,
    somPCCWImage,
    (somClassDataStructure *) &CWImageClassData,
    (somCClassDataStructure *) &CWImageCClassData,
    CWImageSM, CWImageOM,
    (char *) NULL,
    (somNonInternalData_t *) NULL,  (somProcMethods_t *) NULL,
    (somVarargsFuncs_t *) NULL,
    (somTP_somClassInitFunc *) NULL,
    4, /* type code alignment */
    -1, /* use parents as directinitclasses */
    0, /* no explicit directinitclasses */
    0, /* number of general method entries */
    (somMethods_t *) NULL,
    0, /* no public data offset */
    0, /* no sci development level check */
    0, /* number of SelectInheritedMethods */
    0, /* no SelectInheritedMethods */
    4, /* number of classdata entries */
    0, /* no entry names provided currently */
    0, /* number of migrated methods */
    0, /* no migrated method implementations */
    0, /* number of initializers */
    0, /* no initializers */
    0, /* used to identify a DTS class */
    0, /* used to register dynamically computed info */
};


/*
 * Class Creation and Initialization
 */

SOMClass * SOMLINK CWImageNewClass (integer4 somtmajorVersion,
		integer4 somtminorVersion)
{
    SOMClass *result;
    WPImageFileNewClass(WPImageFile_MajorVersion,WPImageFile_MinorVersion);	/* static reference */
    /* Explicit metaclass, so get it */ 
    M_CWImageNewClass(M_CWImage_MajorVersion,M_CWImage_MinorVersion);	/* static reference */
    result = somBuildClass(1,&CWImageSCI, somtmajorVersion, somtminorVersion);
    CWImage_parent_WPImageFile_wpRestoreState_resolved = 
	somParentNumResolve(CWImageCClassData.parentMtab, 1, WPObjectClassData.wpRestoreState); 
    CWImage_parent_WPImageFile_wpQueryDetailsData_resolved = 
	somParentNumResolve(CWImageCClassData.parentMtab, 1, WPObjectClassData.wpQueryDetailsData); 
    CWImage_parent_WPImageFile_wpAddSettingsPages_resolved = 
	somParentNumResolve(CWImageCClassData.parentMtab, 1, WPObjectClassData.wpAddSettingsPages); 
    CWImage_parent_WPImageFile_wpOpen_resolved = 
	somParentNumResolve(CWImageCClassData.parentMtab, 1, WPObjectClassData.wpOpen); 
    CWImage_parent_WPImageFile_wpMenuItemSelected_resolved = 
	somParentNumResolve(CWImageCClassData.parentMtab, 1, WPObjectClassData.wpMenuItemSelected); 
    CWImage_parent_WPImageFile_wpModifyPopupMenu_resolved = 
	somParentNumResolve(CWImageCClassData.parentMtab, 1, WPObjectClassData.wpModifyPopupMenu); 
    CWImage_parent_WPImageFile_wpUnInitData_resolved = 
	somParentNumResolve(CWImageCClassData.parentMtab, 1, WPObjectClassData.wpUnInitData); 
    CWImage_parent_WPImageFile_wpWriteImageFile_resolved = 
	somParentNumResolve(CWImageCClassData.parentMtab, 1, WPImageFileClassData.wpWriteImageFile); 
    CWImage_parent_WPImageFile_wpReadImageFile_resolved = 
	somParentNumResolve(CWImageCClassData.parentMtab, 1, WPImageFileClassData.wpReadImageFile); 
    CWImage_parent_WPImageFile_wpSetBitmapData_resolved = 
	somParentNumResolve(CWImageCClassData.parentMtab, 1, WPImageFileClassData.wpSetBitmapData); 
    CWImage_parent_WPImageFile_wpQueryBitmapData_resolved = 
	somParentNumResolve(CWImageCClassData.parentMtab, 1, WPImageFileClassData.wpQueryBitmapData); 
    CWImage_parent_WPImageFile_wpQueryBitmapInfoHeader_resolved = 
	somParentNumResolve(CWImageCClassData.parentMtab, 1, WPImageFileClassData.wpQueryBitmapInfoHeader); 
    CWImage_parent_WPImageFile_wpQueryBitmapHandle_resolved = 
	somParentNumResolve(CWImageCClassData.parentMtab, 1, WPImageFileClassData.wpQueryBitmapHandle); 
    return result;
}

/*
 * Functions for attributes.
 */

#endif /* Primary Implementation Support */
#pragma checkout(resume)

#endif       /* SOM_CWImage_ih */

/*
 * -- By default, for classes declared using IDL,
 * -- this emitter doesn't define redispatch/apply stubs.
 * -- Instead, it requests that the SOM kernel produce them.
 * -- To override this default, use the "notc" modifier.
 */

#ifndef SOM_M_CWImage_ih
#define SOM_M_CWImage_ih

#pragma checkout(suspend)

#include <cwimage.h>

/*
 * Set the scope of methods functions
 */
#ifndef SOM_Scope
#ifdef __cplusplus
  #define SOM_Scope extern "C"
#else
  #define SOM_Scope extern
#endif  /* __cplusplus */
#endif  /* SOM_Scope */

#ifndef SOM_CurrentClass
    #define SOM_CurrentClass M_CWImageCClassData.parentMtab
#endif  /* SOM_CurrentClass */

#define M_CWImage_MaxNoMethods 0

/*
 * -- Instance data
 */
typedef void M_CWImageData;

/*
 * This class introduces no instance data, so no GetData macro is provided
 */

/*
 * Primary Implementation File Support
 */
#if (defined(CWImage_Class_Source) || defined(M_CWImage_Class_Source) || defined(SOM_Module_cwimage_Source))

/*
 * Trace/Debug macro
 */
#ifndef M_CWImageMethodDebug
   #define M_CWImageMethodDebug(c,m) SOMMethodDebug(c,m)
#endif  /* M_CWImageMethodDebug */

/*
 * Current class macros for Instance and Meta classes.
 */

/*
 * Overridden method: wpclsInitData
 */
#pragma linkage(cwimgM_wpclsInitData, system)
SOM_Scope void  SOMLINK cwimgM_wpclsInitData(M_CWImage *somSelf);
static char *somMN_M_CWImagewpclsInitData = "M_WPObject::wpclsInitData";
static somId somId_M_CWImagewpclsInitData = &somMN_M_CWImagewpclsInitData;
#ifdef somId_wpclsInitData
#undef somId_wpclsInitData
#else
#define somId_wpclsInitData somId_M_CWImagewpclsInitData
#endif
static somMethodProc* M_CWImage_parent_M_WPImageFile_wpclsInitData_resolved;
#define M_CWImage_parent_M_WPImageFile_wpclsInitData(somSelf) \
  ((( somTD_M_WPObject_wpclsInitData ) \
    M_CWImage_parent_M_WPImageFile_wpclsInitData_resolved) \
	 (somSelf))
#ifndef SOMGD_pmc_M_WPImageFile_wpclsInitData
  #ifdef parent_M_WPImageFile_wpclsInitData
     #undef parent_M_WPImageFile_wpclsInitData
     #define SOMGD_pmc_M_WPImageFile_wpclsInitData 1
  #else
     #define parent_M_WPImageFile_wpclsInitData M_CWImage_parent_M_WPImageFile_wpclsInitData
  #endif /* parent_M_WPImageFile_wpclsInitData */
#endif /* SOMGD_pmc_M_WPImageFile_wpclsInitData */
#ifndef parent_wpclsInitData
     #define parent_wpclsInitData M_CWImage_parent_M_WPImageFile_wpclsInitData
#endif  /* parent_wpclsInitData */
#define M_CWImage_parents_wpclsInitData(somSelf) (\
   M_CWImage_parent_M_WPImageFile_wpclsInitData(somSelf))

/*
 * Overridden method: wpclsQueryDefaultView
 */
#pragma linkage(cwimgM_wpclsQueryDefaultView, system)
SOM_Scope ULONG  SOMLINK cwimgM_wpclsQueryDefaultView(M_CWImage *somSelf);
static char *somMN_M_CWImagewpclsQueryDefaultView = "M_WPObject::wpclsQueryDefaultView";
static somId somId_M_CWImagewpclsQueryDefaultView = &somMN_M_CWImagewpclsQueryDefaultView;
#ifdef somId_wpclsQueryDefaultView
#undef somId_wpclsQueryDefaultView
#else
#define somId_wpclsQueryDefaultView somId_M_CWImagewpclsQueryDefaultView
#endif
static somMethodProc* M_CWImage_parent_M_WPImageFile_wpclsQueryDefaultView_resolved;
#define M_CWImage_parent_M_WPImageFile_wpclsQueryDefaultView(somSelf) \
  ((( somTD_M_WPObject_wpclsQueryDefaultView ) \
    M_CWImage_parent_M_WPImageFile_wpclsQueryDefaultView_resolved) \
	 (somSelf))
#ifndef SOMGD_pmc_M_WPImageFile_wpclsQueryDefaultView
  #ifdef parent_M_WPImageFile_wpclsQueryDefaultView
     #undef parent_M_WPImageFile_wpclsQueryDefaultView
     #define SOMGD_pmc_M_WPImageFile_wpclsQueryDefaultView 1
  #else
     #define parent_M_WPImageFile_wpclsQueryDefaultView M_CWImage_parent_M_WPImageFile_wpclsQueryDefaultView
  #endif /* parent_M_WPImageFile_wpclsQueryDefaultView */
#endif /* SOMGD_pmc_M_WPImageFile_wpclsQueryDefaultView */
#ifndef parent_wpclsQueryDefaultView
     #define parent_wpclsQueryDefaultView M_CWImage_parent_M_WPImageFile_wpclsQueryDefaultView
#endif  /* parent_wpclsQueryDefaultView */
#define M_CWImage_parents_wpclsQueryDefaultView(somSelf) (\
   M_CWImage_parent_M_WPImageFile_wpclsQueryDefaultView(somSelf))

/*
 * Overridden method: wpclsQueryTitle
 */
#pragma linkage(cwimgM_wpclsQueryTitle, system)
SOM_Scope PSZ  SOMLINK cwimgM_wpclsQueryTitle(M_CWImage *somSelf);
static char *somMN_M_CWImagewpclsQueryTitle = "M_WPObject::wpclsQueryTitle";
static somId somId_M_CWImagewpclsQueryTitle = &somMN_M_CWImagewpclsQueryTitle;
#ifdef somId_wpclsQueryTitle
#undef somId_wpclsQueryTitle
#else
#define somId_wpclsQueryTitle somId_M_CWImagewpclsQueryTitle
#endif
static somMethodProc* M_CWImage_parent_M_WPImageFile_wpclsQueryTitle_resolved;
#define M_CWImage_parent_M_WPImageFile_wpclsQueryTitle(somSelf) \
  ((( somTD_M_WPObject_wpclsQueryTitle ) \
    M_CWImage_parent_M_WPImageFile_wpclsQueryTitle_resolved) \
	 (somSelf))
#ifndef SOMGD_pmc_M_WPImageFile_wpclsQueryTitle
  #ifdef parent_M_WPImageFile_wpclsQueryTitle
     #undef parent_M_WPImageFile_wpclsQueryTitle
     #define SOMGD_pmc_M_WPImageFile_wpclsQueryTitle 1
  #else
     #define parent_M_WPImageFile_wpclsQueryTitle M_CWImage_parent_M_WPImageFile_wpclsQueryTitle
  #endif /* parent_M_WPImageFile_wpclsQueryTitle */
#endif /* SOMGD_pmc_M_WPImageFile_wpclsQueryTitle */
#ifndef parent_wpclsQueryTitle
     #define parent_wpclsQueryTitle M_CWImage_parent_M_WPImageFile_wpclsQueryTitle
#endif  /* parent_wpclsQueryTitle */
#define M_CWImage_parents_wpclsQueryTitle(somSelf) (\
   M_CWImage_parent_M_WPImageFile_wpclsQueryTitle(somSelf))

/*
 * Overridden method: wpclsQueryIconData
 */
#pragma linkage(cwimgM_wpclsQueryIconData, system)
SOM_Scope ULONG  SOMLINK cwimgM_wpclsQueryIconData(M_CWImage *somSelf,
		PICONINFO pIconInfo);
static char *somMN_M_CWImagewpclsQueryIconData = "M_WPObject::wpclsQueryIconData";
static somId somId_M_CWImagewpclsQueryIconData = &somMN_M_CWImagewpclsQueryIconData;
#ifdef somId_wpclsQueryIconData
#undef somId_wpclsQueryIconData
#else
#define somId_wpclsQueryIconData somId_M_CWImagewpclsQueryIconData
#endif
static somMethodProc* M_CWImage_parent_M_WPImageFile_wpclsQueryIconData_resolved;
#define M_CWImage_parent_M_WPImageFile_wpclsQueryIconData(somSelf,pIconInfo) \
  ((( somTD_M_WPObject_wpclsQueryIconData ) \
    M_CWImage_parent_M_WPImageFile_wpclsQueryIconData_resolved) \
	 (somSelf,pIconInfo))
#ifndef SOMGD_pmc_M_WPImageFile_wpclsQueryIconData
  #ifdef parent_M_WPImageFile_wpclsQueryIconData
     #undef parent_M_WPImageFile_wpclsQueryIconData
     #define SOMGD_pmc_M_WPImageFile_wpclsQueryIconData 1
  #else
     #define parent_M_WPImageFile_wpclsQueryIconData M_CWImage_parent_M_WPImageFile_wpclsQueryIconData
  #endif /* parent_M_WPImageFile_wpclsQueryIconData */
#endif /* SOMGD_pmc_M_WPImageFile_wpclsQueryIconData */
#ifndef parent_wpclsQueryIconData
     #define parent_wpclsQueryIconData M_CWImage_parent_M_WPImageFile_wpclsQueryIconData
#endif  /* parent_wpclsQueryIconData */
#define M_CWImage_parents_wpclsQueryIconData(somSelf,pIconInfo) (\
   M_CWImage_parent_M_WPImageFile_wpclsQueryIconData(somSelf,pIconInfo))

/*
 * Overridden method: wpclsQueryDetailsInfo
 */
#pragma linkage(cwimgM_wpclsQueryDetailsInfo, system)
SOM_Scope ULONG  SOMLINK cwimgM_wpclsQueryDetailsInfo(M_CWImage *somSelf,
		PCLASSFIELDINFO* ppClassFieldInfo,
		PULONG pSize);
static char *somMN_M_CWImagewpclsQueryDetailsInfo = "M_WPObject::wpclsQueryDetailsInfo";
static somId somId_M_CWImagewpclsQueryDetailsInfo = &somMN_M_CWImagewpclsQueryDetailsInfo;
#ifdef somId_wpclsQueryDetailsInfo
#undef somId_wpclsQueryDetailsInfo
#else
#define somId_wpclsQueryDetailsInfo somId_M_CWImagewpclsQueryDetailsInfo
#endif
static somMethodProc* M_CWImage_parent_M_WPImageFile_wpclsQueryDetailsInfo_resolved;
#define M_CWImage_parent_M_WPImageFile_wpclsQueryDetailsInfo(somSelf,ppClassFieldInfo,pSize) \
  ((( somTD_M_WPObject_wpclsQueryDetailsInfo ) \
    M_CWImage_parent_M_WPImageFile_wpclsQueryDetailsInfo_resolved) \
	 (somSelf,ppClassFieldInfo,pSize))
#ifndef SOMGD_pmc_M_WPImageFile_wpclsQueryDetailsInfo
  #ifdef parent_M_WPImageFile_wpclsQueryDetailsInfo
     #undef parent_M_WPImageFile_wpclsQueryDetailsInfo
     #define SOMGD_pmc_M_WPImageFile_wpclsQueryDetailsInfo 1
  #else
     #define parent_M_WPImageFile_wpclsQueryDetailsInfo M_CWImage_parent_M_WPImageFile_wpclsQueryDetailsInfo
  #endif /* parent_M_WPImageFile_wpclsQueryDetailsInfo */
#endif /* SOMGD_pmc_M_WPImageFile_wpclsQueryDetailsInfo */
#ifndef parent_wpclsQueryDetailsInfo
     #define parent_wpclsQueryDetailsInfo M_CWImage_parent_M_WPImageFile_wpclsQueryDetailsInfo
#endif  /* parent_wpclsQueryDetailsInfo */
#define M_CWImage_parents_wpclsQueryDetailsInfo(somSelf,ppClassFieldInfo,pSize) (\
   M_CWImage_parent_M_WPImageFile_wpclsQueryDetailsInfo(somSelf,ppClassFieldInfo,pSize))

/*
 * Initialize the class data structure
 */
SOMEXTERN struct M_CWImageClassDataStructure SOMDLINK M_CWImageClassData = {(SOMAny *) NULL};

/*
 * Define the C class data structure
 */
SOMEXTERN struct M_CWImageCClassDataStructure SOMDLINK M_CWImageCClassData = {(somMethodTabs) NULL};

/*
 * Routines and Structures to create the class object
 */


/*
 * Declare the Override Methods table.
 */
static somOverrideMethod_t M_CWImageOM[] = {
    {    &somId_M_CWImagewpclsInitData,
         (somMethodProc *) cwimgM_wpclsInitData    },
    {    &somId_M_CWImagewpclsQueryDefaultView,
         (somMethodProc *) cwimgM_wpclsQueryDefaultView    },
    {    &somId_M_CWImagewpclsQueryTitle,
         (somMethodProc *) cwimgM_wpclsQueryTitle    },
    {    &somId_M_CWImagewpclsQueryIconData,
         (somMethodProc *) cwimgM_wpclsQueryIconData    },
    {    &somId_M_CWImagewpclsQueryDetailsInfo,
         (somMethodProc *) cwimgM_wpclsQueryDetailsInfo    },
};


/*
 *  Initializers for class Ids
 */
static char * somCN_M_CWImage = "M_CWImage";
static char * somPCN_M_CWImage_M_WPImageFile = "M_WPImageFile";

static somId somPCM_CWImage[] = {
    &somPCN_M_CWImage_M_WPImageFile,
};

static somStaticClassInfo M_CWImageSCI = {
    4, 0, 5, 0, 0, 0,
    M_CWImage_MajorVersion, M_CWImage_MinorVersion,
    0, M_CWImage_MaxNoMethods, 1,
    &somCN_M_CWImage,
    (somId) NULL, 1,
    somPCM_CWImage,
    (somClassDataStructure *) &M_CWImageClassData,
    (somCClassDataStructure *) &M_CWImageCClassData,
    (somStaticMethod_t *) NULL, M_CWImageOM,
    (char *) NULL,
    (somNonInternalData_t *) NULL,  (somProcMethods_t *) NULL,
    (somVarargsFuncs_t *) NULL,
    (somTP_somClassInitFunc *) NULL,
    0, /* type code alignment */
    -1, /* use parents as directinitclasses */
    0, /* no explicit directinitclasses */
    0, /* number of general method entries */
    (somMethods_t *) NULL,
    0, /* no public data offset */
    0, /* no sci development level check */
    0, /* number of SelectInheritedMethods */
    0, /* no SelectInheritedMethods */
    0, /* number of classdata entries */
    0, /* no entry names provided currently */
    0, /* number of migrated methods */
    0, /* no migrated method implementations */
    0, /* number of initializers */
    0, /* no initializers */
    0, /* used to identify a DTS class */
    0, /* used to register dynamically computed info */
};


/*
 * Class Creation and Initialization
 */

SOMClass * SOMLINK M_CWImageNewClass (integer4 somtmajorVersion,
		integer4 somtminorVersion)
{
    SOMClass *result;
    M_WPImageFileNewClass(M_WPImageFile_MajorVersion,M_WPImageFile_MinorVersion);	/* static reference */
    result = somBuildClass(1,&M_CWImageSCI, somtmajorVersion, somtminorVersion);
    M_CWImage_parent_M_WPImageFile_wpclsQueryDetailsInfo_resolved = 
	somParentNumResolve(M_CWImageCClassData.parentMtab, 1, M_WPObjectClassData.wpclsQueryDetailsInfo); 
    M_CWImage_parent_M_WPImageFile_wpclsQueryIconData_resolved = 
	somParentNumResolve(M_CWImageCClassData.parentMtab, 1, M_WPObjectClassData.wpclsQueryIconData); 
    M_CWImage_parent_M_WPImageFile_wpclsQueryTitle_resolved = 
	somParentNumResolve(M_CWImageCClassData.parentMtab, 1, M_WPObjectClassData.wpclsQueryTitle); 
    M_CWImage_parent_M_WPImageFile_wpclsQueryDefaultView_resolved = 
	somParentNumResolve(M_CWImageCClassData.parentMtab, 1, M_WPObjectClassData.wpclsQueryDefaultView); 
    M_CWImage_parent_M_WPImageFile_wpclsInitData_resolved = 
	somParentNumResolve(M_CWImageCClassData.parentMtab, 1, M_WPObjectClassData.wpclsInitData); 
    return result;
}

/*
 * Functions for attributes.
 */

#endif /* Primary Implementation Support */
#pragma checkout(resume)

#endif       /* SOM_M_CWImage_ih */
