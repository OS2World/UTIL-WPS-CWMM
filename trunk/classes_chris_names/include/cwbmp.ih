
/*
 * This file was generated by the SOM Compiler.
 * FileName: include\cwbmp.ih.
 * Generated using:
 *     SOM Precompiler somipc: 2.29.1.7
 *     SOM Emitter emitih: 2.42
 */

/*
 * 
 * CWBmp.idl:
 */


/*
 * -- By default, for classes declared using IDL,
 * -- this emitter doesn't define redispatch/apply stubs.
 * -- Instead, it requests that the SOM kernel produce them.
 * -- To override this default, use the "notc" modifier.
 */

#ifndef SOM_CWBitmap_ih
#define SOM_CWBitmap_ih

#pragma checkout(suspend)

#include <cwbmp.h>

/*
 * Set the scope of methods functions
 */
#ifndef SOM_Scope
#ifdef __cplusplus
  #define SOM_Scope extern "C"
#else
  #define SOM_Scope extern
#endif  /* __cplusplus */
#endif  /* SOM_Scope */

#ifndef SOM_CurrentClass
    #define SOM_CurrentClass CWBitmapCClassData.parentMtab
#endif  /* SOM_CurrentClass */

#define CWBitmap_MaxNoMethods 5

/*
 * -- Instance data
 */
typedef struct {
	HBITMAP hBitmapSmall;
	ULONG ulSizeSmallBitmap;
	PBYTE pBmpInfoHeader2;
	char chrIOProcName[64];
	BOOL bNoIOProcAvailable;
} CWBitmapData;

/*
 * GetData macro
 */

/*
 * -- This emitter treats Data Tokens as Thunks by default.
 * -- Use the sc modifier "nothunks" to override this default.
 */
typedef CWBitmapData* SOMLINK somTP_CWBitmap_DataThunk(void*);
#ifdef __IBMC__
#pragma linkage(somTP_CWBitmap_DataThunk, system)
#endif
typedef somTP_CWBitmap_DataThunk *somTD_CWBitmap_DataThunk;

#define CWBitmapGetData(somSelf) \
   (((somTD_CWBitmap_DataThunk)(CWBitmapCClassData.instanceDataToken))(somSelf))

/*
 * Instance variable and staticdata access macros
 */
#ifndef NO_VARIABLE_MACROS
#define _hBitmapSmall (somThis->hBitmapSmall)
#define _ulSizeSmallBitmap (somThis->ulSizeSmallBitmap)
#define _pBmpInfoHeader2 (somThis->pBmpInfoHeader2)
#define _chrIOProcName (somThis->chrIOProcName)
#define _bNoIOProcAvailable (somThis->bNoIOProcAvailable)
#endif

/*
 * Primary Implementation File Support
 */
#if (defined(CWBitmap_Class_Source) || defined(SOM_Module_cwbmp_Source))

/*
 * Trace/Debug macro
 */
#ifndef CWBitmapMethodDebug
   #define CWBitmapMethodDebug(c,m) SOMMethodDebug(c,m)
#endif  /* CWBitmapMethodDebug */

/*
 * Current class macros for Instance and Meta classes.
 */
#undef SOMMeta
#define SOMMeta M_CWBitmapCClassData.parentMtab
#undef SOMInstance
#define SOMInstance CWBitmapCClassData.parentMtab

#ifndef M_CWBitmap_Class_Source
   #define M_CWBitmap_Class_Source
#endif    /* M_CWBitmap_Class_Source */

/*
 * Overridden method: wpModifyPopupMenu
 */
#pragma linkage(cwbmp_wpModifyPopupMenu, system)
SOM_Scope BOOL  SOMLINK cwbmp_wpModifyPopupMenu(CWBitmap *somSelf,
		HWND hwndMenu,
		HWND hwndCnr,
		ULONG iPosition);
static char *somMN_CWBitmapwpModifyPopupMenu = "WPObject::wpModifyPopupMenu";
static somId somId_CWBitmapwpModifyPopupMenu = &somMN_CWBitmapwpModifyPopupMenu;
#ifdef somId_wpModifyPopupMenu
#undef somId_wpModifyPopupMenu
#else
#define somId_wpModifyPopupMenu somId_CWBitmapwpModifyPopupMenu
#endif
static somMethodProc* CWBitmap_parent_WPBitmap_wpModifyPopupMenu_resolved;
#define CWBitmap_parent_WPBitmap_wpModifyPopupMenu(somSelf,hwndMenu,hwndCnr,iPosition) \
  ((( somTD_WPObject_wpModifyPopupMenu ) \
    CWBitmap_parent_WPBitmap_wpModifyPopupMenu_resolved) \
	 (somSelf,hwndMenu,hwndCnr,iPosition))
#ifndef SOMGD_pmc_WPBitmap_wpModifyPopupMenu
  #ifdef parent_WPBitmap_wpModifyPopupMenu
     #undef parent_WPBitmap_wpModifyPopupMenu
     #define SOMGD_pmc_WPBitmap_wpModifyPopupMenu 1
  #else
     #define parent_WPBitmap_wpModifyPopupMenu CWBitmap_parent_WPBitmap_wpModifyPopupMenu
  #endif /* parent_WPBitmap_wpModifyPopupMenu */
#endif /* SOMGD_pmc_WPBitmap_wpModifyPopupMenu */
#ifndef parent_wpModifyPopupMenu
     #define parent_wpModifyPopupMenu CWBitmap_parent_WPBitmap_wpModifyPopupMenu
#endif  /* parent_wpModifyPopupMenu */
#define CWBitmap_parents_wpModifyPopupMenu(somSelf,hwndMenu,hwndCnr,iPosition) (\
   CWBitmap_parent_WPBitmap_wpModifyPopupMenu(somSelf,hwndMenu,hwndCnr,iPosition))

/*
 * Overridden method: wpMenuItemSelected
 */
#pragma linkage(cwbmp_wpMenuItemSelected, system)
SOM_Scope BOOL  SOMLINK cwbmp_wpMenuItemSelected(CWBitmap *somSelf,
		HWND hwndFrame,
		ULONG ulMenuId);
static char *somMN_CWBitmapwpMenuItemSelected = "WPObject::wpMenuItemSelected";
static somId somId_CWBitmapwpMenuItemSelected = &somMN_CWBitmapwpMenuItemSelected;
#ifdef somId_wpMenuItemSelected
#undef somId_wpMenuItemSelected
#else
#define somId_wpMenuItemSelected somId_CWBitmapwpMenuItemSelected
#endif
static somMethodProc* CWBitmap_parent_WPBitmap_wpMenuItemSelected_resolved;
#define CWBitmap_parent_WPBitmap_wpMenuItemSelected(somSelf,hwndFrame,ulMenuId) \
  ((( somTD_WPObject_wpMenuItemSelected ) \
    CWBitmap_parent_WPBitmap_wpMenuItemSelected_resolved) \
	 (somSelf,hwndFrame,ulMenuId))
#ifndef SOMGD_pmc_WPBitmap_wpMenuItemSelected
  #ifdef parent_WPBitmap_wpMenuItemSelected
     #undef parent_WPBitmap_wpMenuItemSelected
     #define SOMGD_pmc_WPBitmap_wpMenuItemSelected 1
  #else
     #define parent_WPBitmap_wpMenuItemSelected CWBitmap_parent_WPBitmap_wpMenuItemSelected
  #endif /* parent_WPBitmap_wpMenuItemSelected */
#endif /* SOMGD_pmc_WPBitmap_wpMenuItemSelected */
#ifndef parent_wpMenuItemSelected
     #define parent_wpMenuItemSelected CWBitmap_parent_WPBitmap_wpMenuItemSelected
#endif  /* parent_wpMenuItemSelected */
#define CWBitmap_parents_wpMenuItemSelected(somSelf,hwndFrame,ulMenuId) (\
   CWBitmap_parent_WPBitmap_wpMenuItemSelected(somSelf,hwndFrame,ulMenuId))

/*
 * Overridden method: wpOpen
 */
#pragma linkage(cwbmp_wpOpen, system)
SOM_Scope HWND  SOMLINK cwbmp_wpOpen(CWBitmap *somSelf,
		HWND hwndCnr,
		ULONG ulView,
		ULONG param);
static char *somMN_CWBitmapwpOpen = "WPObject::wpOpen";
static somId somId_CWBitmapwpOpen = &somMN_CWBitmapwpOpen;
#ifdef somId_wpOpen
#undef somId_wpOpen
#else
#define somId_wpOpen somId_CWBitmapwpOpen
#endif
static somMethodProc* CWBitmap_parent_WPBitmap_wpOpen_resolved;
#define CWBitmap_parent_WPBitmap_wpOpen(somSelf,hwndCnr,ulView,param) \
  ((( somTD_WPObject_wpOpen ) \
    CWBitmap_parent_WPBitmap_wpOpen_resolved) \
	 (somSelf,hwndCnr,ulView,param))
#ifndef SOMGD_pmc_WPBitmap_wpOpen
  #ifdef parent_WPBitmap_wpOpen
     #undef parent_WPBitmap_wpOpen
     #define SOMGD_pmc_WPBitmap_wpOpen 1
  #else
     #define parent_WPBitmap_wpOpen CWBitmap_parent_WPBitmap_wpOpen
  #endif /* parent_WPBitmap_wpOpen */
#endif /* SOMGD_pmc_WPBitmap_wpOpen */
#ifndef parent_wpOpen
     #define parent_wpOpen CWBitmap_parent_WPBitmap_wpOpen
#endif  /* parent_wpOpen */
#define CWBitmap_parents_wpOpen(somSelf,hwndCnr,ulView,param) (\
   CWBitmap_parent_WPBitmap_wpOpen(somSelf,hwndCnr,ulView,param))

/*
 * Overridden method: wpAddSettingsPages
 */
#pragma linkage(cwbmp_wpAddSettingsPages, system)
SOM_Scope BOOL  SOMLINK cwbmp_wpAddSettingsPages(CWBitmap *somSelf,
		HWND hwndNotebook);
static char *somMN_CWBitmapwpAddSettingsPages = "WPObject::wpAddSettingsPages";
static somId somId_CWBitmapwpAddSettingsPages = &somMN_CWBitmapwpAddSettingsPages;
#ifdef somId_wpAddSettingsPages
#undef somId_wpAddSettingsPages
#else
#define somId_wpAddSettingsPages somId_CWBitmapwpAddSettingsPages
#endif
static somMethodProc* CWBitmap_parent_WPBitmap_wpAddSettingsPages_resolved;
#define CWBitmap_parent_WPBitmap_wpAddSettingsPages(somSelf,hwndNotebook) \
  ((( somTD_WPObject_wpAddSettingsPages ) \
    CWBitmap_parent_WPBitmap_wpAddSettingsPages_resolved) \
	 (somSelf,hwndNotebook))
#ifndef SOMGD_pmc_WPBitmap_wpAddSettingsPages
  #ifdef parent_WPBitmap_wpAddSettingsPages
     #undef parent_WPBitmap_wpAddSettingsPages
     #define SOMGD_pmc_WPBitmap_wpAddSettingsPages 1
  #else
     #define parent_WPBitmap_wpAddSettingsPages CWBitmap_parent_WPBitmap_wpAddSettingsPages
  #endif /* parent_WPBitmap_wpAddSettingsPages */
#endif /* SOMGD_pmc_WPBitmap_wpAddSettingsPages */
#ifndef parent_wpAddSettingsPages
     #define parent_wpAddSettingsPages CWBitmap_parent_WPBitmap_wpAddSettingsPages
#endif  /* parent_wpAddSettingsPages */
#define CWBitmap_parents_wpAddSettingsPages(somSelf,hwndNotebook) (\
   CWBitmap_parent_WPBitmap_wpAddSettingsPages(somSelf,hwndNotebook))

/*
 * Overridden method: wpUnInitData
 */
#pragma linkage(cwbmp_wpUnInitData, system)
SOM_Scope void  SOMLINK cwbmp_wpUnInitData(CWBitmap *somSelf);
static char *somMN_CWBitmapwpUnInitData = "WPObject::wpUnInitData";
static somId somId_CWBitmapwpUnInitData = &somMN_CWBitmapwpUnInitData;
#ifdef somId_wpUnInitData
#undef somId_wpUnInitData
#else
#define somId_wpUnInitData somId_CWBitmapwpUnInitData
#endif
static somMethodProc* CWBitmap_parent_WPBitmap_wpUnInitData_resolved;
#define CWBitmap_parent_WPBitmap_wpUnInitData(somSelf) \
  ((( somTD_WPObject_wpUnInitData ) \
    CWBitmap_parent_WPBitmap_wpUnInitData_resolved) \
	 (somSelf))
#ifndef SOMGD_pmc_WPBitmap_wpUnInitData
  #ifdef parent_WPBitmap_wpUnInitData
     #undef parent_WPBitmap_wpUnInitData
     #define SOMGD_pmc_WPBitmap_wpUnInitData 1
  #else
     #define parent_WPBitmap_wpUnInitData CWBitmap_parent_WPBitmap_wpUnInitData
  #endif /* parent_WPBitmap_wpUnInitData */
#endif /* SOMGD_pmc_WPBitmap_wpUnInitData */
#ifndef parent_wpUnInitData
     #define parent_wpUnInitData CWBitmap_parent_WPBitmap_wpUnInitData
#endif  /* parent_wpUnInitData */
#define CWBitmap_parents_wpUnInitData(somSelf) (\
   CWBitmap_parent_WPBitmap_wpUnInitData(somSelf))

/*
 * Overridden method: wpInitData
 */
#pragma linkage(cwbmp_wpInitData, system)
SOM_Scope void  SOMLINK cwbmp_wpInitData(CWBitmap *somSelf);
static char *somMN_CWBitmapwpInitData = "WPObject::wpInitData";
static somId somId_CWBitmapwpInitData = &somMN_CWBitmapwpInitData;
#ifdef somId_wpInitData
#undef somId_wpInitData
#else
#define somId_wpInitData somId_CWBitmapwpInitData
#endif
static somMethodProc* CWBitmap_parent_WPBitmap_wpInitData_resolved;
#define CWBitmap_parent_WPBitmap_wpInitData(somSelf) \
  ((( somTD_WPObject_wpInitData ) \
    CWBitmap_parent_WPBitmap_wpInitData_resolved) \
	 (somSelf))
#ifndef SOMGD_pmc_WPBitmap_wpInitData
  #ifdef parent_WPBitmap_wpInitData
     #undef parent_WPBitmap_wpInitData
     #define SOMGD_pmc_WPBitmap_wpInitData 1
  #else
     #define parent_WPBitmap_wpInitData CWBitmap_parent_WPBitmap_wpInitData
  #endif /* parent_WPBitmap_wpInitData */
#endif /* SOMGD_pmc_WPBitmap_wpInitData */
#ifndef parent_wpInitData
     #define parent_wpInitData CWBitmap_parent_WPBitmap_wpInitData
#endif  /* parent_wpInitData */
#define CWBitmap_parents_wpInitData(somSelf) (\
   CWBitmap_parent_WPBitmap_wpInitData(somSelf))

/*
 * Overridden method: wpQueryDetailsData
 */
#pragma linkage(cwbmp_wpQueryDetailsData, system)
SOM_Scope ULONG  SOMLINK cwbmp_wpQueryDetailsData(CWBitmap *somSelf,
		PVOID* ppDetailsData,
		PULONG pcp);
static char *somMN_CWBitmapwpQueryDetailsData = "WPObject::wpQueryDetailsData";
static somId somId_CWBitmapwpQueryDetailsData = &somMN_CWBitmapwpQueryDetailsData;
#ifdef somId_wpQueryDetailsData
#undef somId_wpQueryDetailsData
#else
#define somId_wpQueryDetailsData somId_CWBitmapwpQueryDetailsData
#endif
static somMethodProc* CWBitmap_parent_WPBitmap_wpQueryDetailsData_resolved;
#define CWBitmap_parent_WPBitmap_wpQueryDetailsData(somSelf,ppDetailsData,pcp) \
  ((( somTD_WPObject_wpQueryDetailsData ) \
    CWBitmap_parent_WPBitmap_wpQueryDetailsData_resolved) \
	 (somSelf,ppDetailsData,pcp))
#ifndef SOMGD_pmc_WPBitmap_wpQueryDetailsData
  #ifdef parent_WPBitmap_wpQueryDetailsData
     #undef parent_WPBitmap_wpQueryDetailsData
     #define SOMGD_pmc_WPBitmap_wpQueryDetailsData 1
  #else
     #define parent_WPBitmap_wpQueryDetailsData CWBitmap_parent_WPBitmap_wpQueryDetailsData
  #endif /* parent_WPBitmap_wpQueryDetailsData */
#endif /* SOMGD_pmc_WPBitmap_wpQueryDetailsData */
#ifndef parent_wpQueryDetailsData
     #define parent_wpQueryDetailsData CWBitmap_parent_WPBitmap_wpQueryDetailsData
#endif  /* parent_wpQueryDetailsData */
#define CWBitmap_parents_wpQueryDetailsData(somSelf,ppDetailsData,pcp) (\
   CWBitmap_parent_WPBitmap_wpQueryDetailsData(somSelf,ppDetailsData,pcp))

/*
 * Initialize the class data structure
 */
SOMEXTERN struct CWBitmapClassDataStructure SOMDLINK CWBitmapClassData = {(SOMAny *) NULL};

/*
 * Define the C class data structure
 */
SOMEXTERN struct CWBitmapCClassDataStructure SOMDLINK CWBitmapCClassData = {(somMethodTabs) NULL};

/*
 * New Method: cwmmAddImageInformationPage
 */
#pragma linkage(cwbmp_cwmmAddImageInformationPage, system)
SOM_Scope ULONG  SOMLINK cwbmp_cwmmAddImageInformationPage(CWBitmap *somSelf,
		HWND hwndNotebook);
#ifndef somMN_cwmmAddImageInformationPage_defined
#define somMN_cwmmAddImageInformationPage_defined
static char *somMN_cwmmAddImageInformationPage = "cwmmAddImageInformationPage";
static somId somId_cwmmAddImageInformationPage = &somMN_cwmmAddImageInformationPage;
#endif  /* somMN_cwmmAddImageInformationPage_defined */
#ifndef somDS_cwmmAddImageInformationPage_defined
#define somDS_cwmmAddImageInformationPage_defined
static char *somDS_cwmmAddImageInformationPage = "::CWBitmap::cwmmAddImageInformationPage";
static somId somDI_cwmmAddImageInformationPage = &somDS_cwmmAddImageInformationPage;
#endif  /* somDS_cwmmAddImageInformationPage_defined */
#define cwmmAddImageInformationPage_somApRdDefault

/*
 * New Method: cwmmQuerySmallBitmapHandle
 */
#pragma linkage(cwbmp_cwmmQuerySmallBitmapHandle, system)
SOM_Scope HBITMAP  SOMLINK cwbmp_cwmmQuerySmallBitmapHandle(CWBitmap *somSelf,
		ULONG ulSize);
#ifndef somMN_cwmmQuerySmallBitmapHandle_defined
#define somMN_cwmmQuerySmallBitmapHandle_defined
static char *somMN_cwmmQuerySmallBitmapHandle = "cwmmQuerySmallBitmapHandle";
static somId somId_cwmmQuerySmallBitmapHandle = &somMN_cwmmQuerySmallBitmapHandle;
#endif  /* somMN_cwmmQuerySmallBitmapHandle_defined */
#ifndef somDS_cwmmQuerySmallBitmapHandle_defined
#define somDS_cwmmQuerySmallBitmapHandle_defined
static char *somDS_cwmmQuerySmallBitmapHandle = "::CWBitmap::cwmmQuerySmallBitmapHandle";
static somId somDI_cwmmQuerySmallBitmapHandle = &somDS_cwmmQuerySmallBitmapHandle;
#endif  /* somDS_cwmmQuerySmallBitmapHandle_defined */
#define cwmmQuerySmallBitmapHandle_somApRdDefault

/*
 * New Method: cwmmFreeBitmaps
 */
#pragma linkage(cwbmp_cwmmFreeBitmaps, system)
SOM_Scope void  SOMLINK cwbmp_cwmmFreeBitmaps(CWBitmap *somSelf);
#ifndef somMN_cwmmFreeBitmaps_defined
#define somMN_cwmmFreeBitmaps_defined
static char *somMN_cwmmFreeBitmaps = "cwmmFreeBitmaps";
static somId somId_cwmmFreeBitmaps = &somMN_cwmmFreeBitmaps;
#endif  /* somMN_cwmmFreeBitmaps_defined */
#ifndef somDS_cwmmFreeBitmaps_defined
#define somDS_cwmmFreeBitmaps_defined
static char *somDS_cwmmFreeBitmaps = "::CWBitmap::cwmmFreeBitmaps";
static somId somDI_cwmmFreeBitmaps = &somDS_cwmmFreeBitmaps;
#endif  /* somDS_cwmmFreeBitmaps_defined */
#define cwmmFreeBitmaps_somApRdDefault

/*
 * New Method: cwmmFreeSmallBitmap
 */
#pragma linkage(cwbmp_cwmmFreeSmallBitmap, system)
SOM_Scope void  SOMLINK cwbmp_cwmmFreeSmallBitmap(CWBitmap *somSelf);
#ifndef somMN_cwmmFreeSmallBitmap_defined
#define somMN_cwmmFreeSmallBitmap_defined
static char *somMN_cwmmFreeSmallBitmap = "cwmmFreeSmallBitmap";
static somId somId_cwmmFreeSmallBitmap = &somMN_cwmmFreeSmallBitmap;
#endif  /* somMN_cwmmFreeSmallBitmap_defined */
#ifndef somDS_cwmmFreeSmallBitmap_defined
#define somDS_cwmmFreeSmallBitmap_defined
static char *somDS_cwmmFreeSmallBitmap = "::CWBitmap::cwmmFreeSmallBitmap";
static somId somDI_cwmmFreeSmallBitmap = &somDS_cwmmFreeSmallBitmap;
#endif  /* somDS_cwmmFreeSmallBitmap_defined */
#define cwmmFreeSmallBitmap_somApRdDefault

/*
 * New Method: cwmmQueryBitmapInfoHeader
 */
#pragma linkage(cwbmp_cwmmQueryBitmapInfoHeader, system)
SOM_Scope PBYTE  SOMLINK cwbmp_cwmmQueryBitmapInfoHeader(CWBitmap *somSelf);
#ifndef somMN_cwmmQueryBitmapInfoHeader_defined
#define somMN_cwmmQueryBitmapInfoHeader_defined
static char *somMN_cwmmQueryBitmapInfoHeader = "cwmmQueryBitmapInfoHeader";
static somId somId_cwmmQueryBitmapInfoHeader = &somMN_cwmmQueryBitmapInfoHeader;
#endif  /* somMN_cwmmQueryBitmapInfoHeader_defined */
#ifndef somDS_cwmmQueryBitmapInfoHeader_defined
#define somDS_cwmmQueryBitmapInfoHeader_defined
static char *somDS_cwmmQueryBitmapInfoHeader = "::CWBitmap::cwmmQueryBitmapInfoHeader";
static somId somDI_cwmmQueryBitmapInfoHeader = &somDS_cwmmQueryBitmapInfoHeader;
#endif  /* somDS_cwmmQueryBitmapInfoHeader_defined */
#define cwmmQueryBitmapInfoHeader_somApRdDefault

/*
 * Routines and Structures to create the class object
 */


/*
 * Declare the Static Methods table.
 */
static somStaticMethod_t CWBitmapSM[] = {
    {    &CWBitmapClassData.cwmmAddImageInformationPage,
         &somId_cwmmAddImageInformationPage,
         &somDI_cwmmAddImageInformationPage,
         (somMethodProc *) cwbmp_cwmmAddImageInformationPage,
         (somMethodProc *)((void*)-1),
#ifdef cwmmAddImageInformationPage_somApRdDefault
         0},
#else
         (somMethodProc *) ((void*)&cwmmAddImageInformationPageStubs) },
#endif
    {    &CWBitmapClassData.cwmmQuerySmallBitmapHandle,
         &somId_cwmmQuerySmallBitmapHandle,
         &somDI_cwmmQuerySmallBitmapHandle,
         (somMethodProc *) cwbmp_cwmmQuerySmallBitmapHandle,
         (somMethodProc *)((void*)-1),
#ifdef cwmmQuerySmallBitmapHandle_somApRdDefault
         0},
#else
         (somMethodProc *) ((void*)&cwmmQuerySmallBitmapHandleStubs) },
#endif
    {    &CWBitmapClassData.cwmmFreeBitmaps,
         &somId_cwmmFreeBitmaps,
         &somDI_cwmmFreeBitmaps,
         (somMethodProc *) cwbmp_cwmmFreeBitmaps,
         (somMethodProc *)((void*)-1),
#ifdef cwmmFreeBitmaps_somApRdDefault
         0},
#else
         (somMethodProc *) ((void*)&cwmmFreeBitmapsStubs) },
#endif
    {    &CWBitmapClassData.cwmmFreeSmallBitmap,
         &somId_cwmmFreeSmallBitmap,
         &somDI_cwmmFreeSmallBitmap,
         (somMethodProc *) cwbmp_cwmmFreeSmallBitmap,
         (somMethodProc *)((void*)-1),
#ifdef cwmmFreeSmallBitmap_somApRdDefault
         0},
#else
         (somMethodProc *) ((void*)&cwmmFreeSmallBitmapStubs) },
#endif
    {    &CWBitmapClassData.cwmmQueryBitmapInfoHeader,
         &somId_cwmmQueryBitmapInfoHeader,
         &somDI_cwmmQueryBitmapInfoHeader,
         (somMethodProc *) cwbmp_cwmmQueryBitmapInfoHeader,
         (somMethodProc *)((void*)-1),
#ifdef cwmmQueryBitmapInfoHeader_somApRdDefault
         0},
#else
         (somMethodProc *) ((void*)&cwmmQueryBitmapInfoHeaderStubs) },
#endif
};


/*
 * Declare the Override Methods table.
 */
static somOverrideMethod_t CWBitmapOM[] = {
    {    &somId_CWBitmapwpModifyPopupMenu,
         (somMethodProc *) cwbmp_wpModifyPopupMenu    },
    {    &somId_CWBitmapwpMenuItemSelected,
         (somMethodProc *) cwbmp_wpMenuItemSelected    },
    {    &somId_CWBitmapwpOpen,
         (somMethodProc *) cwbmp_wpOpen    },
    {    &somId_CWBitmapwpAddSettingsPages,
         (somMethodProc *) cwbmp_wpAddSettingsPages    },
    {    &somId_CWBitmapwpUnInitData,
         (somMethodProc *) cwbmp_wpUnInitData    },
    {    &somId_CWBitmapwpInitData,
         (somMethodProc *) cwbmp_wpInitData    },
    {    &somId_CWBitmapwpQueryDetailsData,
         (somMethodProc *) cwbmp_wpQueryDetailsData    },
};


/*
 *  Initializers for class Ids
 */
static char * somCN_CWBitmap = "CWBitmap";
#ifndef somEMC_M_CWBitmap_defined
#define somEMC_M_CWBitmap_defined
static char * somEMC_M_CWBitmap = "M_CWBitmap";
#endif
static char * somPCN_CWBitmap_WPBitmap = "WPBitmap";

static somId somPCCWBitmap[] = {
    &somPCN_CWBitmap_WPBitmap,
};

static somStaticClassInfo CWBitmapSCI = {
    4, 5, 7, 0, 0, 0,
    CWBitmap_MajorVersion, CWBitmap_MinorVersion,
    sizeof(CWBitmapData), CWBitmap_MaxNoMethods, 1,
    &somCN_CWBitmap,
    &somEMC_M_CWBitmap, 0,
    somPCCWBitmap,
    (somClassDataStructure *) &CWBitmapClassData,
    (somCClassDataStructure *) &CWBitmapCClassData,
    CWBitmapSM, CWBitmapOM,
    (char *) NULL,
    (somNonInternalData_t *) NULL,  (somProcMethods_t *) NULL,
    (somVarargsFuncs_t *) NULL,
    (somTP_somClassInitFunc *) NULL,
    4, /* type code alignment */
    -1, /* use parents as directinitclasses */
    0, /* no explicit directinitclasses */
    0, /* number of general method entries */
    (somMethods_t *) NULL,
    0, /* no public data offset */
    0, /* no sci development level check */
    0, /* number of SelectInheritedMethods */
    0, /* no SelectInheritedMethods */
    5, /* number of classdata entries */
    0, /* no entry names provided currently */
    0, /* number of migrated methods */
    0, /* no migrated method implementations */
    0, /* number of initializers */
    0, /* no initializers */
    0, /* used to identify a DTS class */
    0, /* used to register dynamically computed info */
};


/*
 * Class Creation and Initialization
 */

SOMClass * SOMLINK CWBitmapNewClass (integer4 somtmajorVersion,
		integer4 somtminorVersion)
{
    SOMClass *result;
    WPBitmapNewClass(WPBitmap_MajorVersion,WPBitmap_MinorVersion);	/* static reference */
    /* Explicit metaclass, so get it */ 
    M_CWBitmapNewClass(M_CWBitmap_MajorVersion,M_CWBitmap_MinorVersion);	/* static reference */
    result = somBuildClass(1,&CWBitmapSCI, somtmajorVersion, somtminorVersion);
    CWBitmap_parent_WPBitmap_wpQueryDetailsData_resolved = 
	somParentNumResolve(CWBitmapCClassData.parentMtab, 1, WPObjectClassData.wpQueryDetailsData); 
    CWBitmap_parent_WPBitmap_wpInitData_resolved = 
	somParentNumResolve(CWBitmapCClassData.parentMtab, 1, WPObjectClassData.wpInitData); 
    CWBitmap_parent_WPBitmap_wpUnInitData_resolved = 
	somParentNumResolve(CWBitmapCClassData.parentMtab, 1, WPObjectClassData.wpUnInitData); 
    CWBitmap_parent_WPBitmap_wpAddSettingsPages_resolved = 
	somParentNumResolve(CWBitmapCClassData.parentMtab, 1, WPObjectClassData.wpAddSettingsPages); 
    CWBitmap_parent_WPBitmap_wpOpen_resolved = 
	somParentNumResolve(CWBitmapCClassData.parentMtab, 1, WPObjectClassData.wpOpen); 
    CWBitmap_parent_WPBitmap_wpMenuItemSelected_resolved = 
	somParentNumResolve(CWBitmapCClassData.parentMtab, 1, WPObjectClassData.wpMenuItemSelected); 
    CWBitmap_parent_WPBitmap_wpModifyPopupMenu_resolved = 
	somParentNumResolve(CWBitmapCClassData.parentMtab, 1, WPObjectClassData.wpModifyPopupMenu); 
    return result;
}

/*
 * Functions for attributes.
 */

#endif /* Primary Implementation Support */
#pragma checkout(resume)

#endif       /* SOM_CWBitmap_ih */

/*
 * -- By default, for classes declared using IDL,
 * -- this emitter doesn't define redispatch/apply stubs.
 * -- Instead, it requests that the SOM kernel produce them.
 * -- To override this default, use the "notc" modifier.
 */

#ifndef SOM_M_CWBitmap_ih
#define SOM_M_CWBitmap_ih

#pragma checkout(suspend)

#include <cwbmp.h>

/*
 * Set the scope of methods functions
 */
#ifndef SOM_Scope
#ifdef __cplusplus
  #define SOM_Scope extern "C"
#else
  #define SOM_Scope extern
#endif  /* __cplusplus */
#endif  /* SOM_Scope */

#ifndef SOM_CurrentClass
    #define SOM_CurrentClass M_CWBitmapCClassData.parentMtab
#endif  /* SOM_CurrentClass */

#define M_CWBitmap_MaxNoMethods 0

/*
 * -- Instance data
 */
typedef void M_CWBitmapData;

/*
 * This class introduces no instance data, so no GetData macro is provided
 */

/*
 * Primary Implementation File Support
 */
#if (defined(CWBitmap_Class_Source) || defined(M_CWBitmap_Class_Source) || defined(SOM_Module_cwbmp_Source))

/*
 * Trace/Debug macro
 */
#ifndef M_CWBitmapMethodDebug
   #define M_CWBitmapMethodDebug(c,m) SOMMethodDebug(c,m)
#endif  /* M_CWBitmapMethodDebug */

/*
 * Current class macros for Instance and Meta classes.
 */

/*
 * Overridden method: wpclsQueryDefaultView
 */
#pragma linkage(cwbmpM_wpclsQueryDefaultView, system)
SOM_Scope ULONG  SOMLINK cwbmpM_wpclsQueryDefaultView(M_CWBitmap *somSelf);
static char *somMN_M_CWBitmapwpclsQueryDefaultView = "M_WPObject::wpclsQueryDefaultView";
static somId somId_M_CWBitmapwpclsQueryDefaultView = &somMN_M_CWBitmapwpclsQueryDefaultView;
#ifdef somId_wpclsQueryDefaultView
#undef somId_wpclsQueryDefaultView
#else
#define somId_wpclsQueryDefaultView somId_M_CWBitmapwpclsQueryDefaultView
#endif
static somMethodProc* M_CWBitmap_parent_M_WPBitmap_wpclsQueryDefaultView_resolved;
#define M_CWBitmap_parent_M_WPBitmap_wpclsQueryDefaultView(somSelf) \
  ((( somTD_M_WPObject_wpclsQueryDefaultView ) \
    M_CWBitmap_parent_M_WPBitmap_wpclsQueryDefaultView_resolved) \
	 (somSelf))
#ifndef SOMGD_pmc_M_WPBitmap_wpclsQueryDefaultView
  #ifdef parent_M_WPBitmap_wpclsQueryDefaultView
     #undef parent_M_WPBitmap_wpclsQueryDefaultView
     #define SOMGD_pmc_M_WPBitmap_wpclsQueryDefaultView 1
  #else
     #define parent_M_WPBitmap_wpclsQueryDefaultView M_CWBitmap_parent_M_WPBitmap_wpclsQueryDefaultView
  #endif /* parent_M_WPBitmap_wpclsQueryDefaultView */
#endif /* SOMGD_pmc_M_WPBitmap_wpclsQueryDefaultView */
#ifndef parent_wpclsQueryDefaultView
     #define parent_wpclsQueryDefaultView M_CWBitmap_parent_M_WPBitmap_wpclsQueryDefaultView
#endif  /* parent_wpclsQueryDefaultView */
#define M_CWBitmap_parents_wpclsQueryDefaultView(somSelf) (\
   M_CWBitmap_parent_M_WPBitmap_wpclsQueryDefaultView(somSelf))

/*
 * Overridden method: wpclsQueryIconData
 */
#pragma linkage(cwbmpM_wpclsQueryIconData, system)
SOM_Scope ULONG  SOMLINK cwbmpM_wpclsQueryIconData(M_CWBitmap *somSelf,
		PICONINFO pIconInfo);
static char *somMN_M_CWBitmapwpclsQueryIconData = "M_WPObject::wpclsQueryIconData";
static somId somId_M_CWBitmapwpclsQueryIconData = &somMN_M_CWBitmapwpclsQueryIconData;
#ifdef somId_wpclsQueryIconData
#undef somId_wpclsQueryIconData
#else
#define somId_wpclsQueryIconData somId_M_CWBitmapwpclsQueryIconData
#endif
static somMethodProc* M_CWBitmap_parent_M_WPBitmap_wpclsQueryIconData_resolved;
#define M_CWBitmap_parent_M_WPBitmap_wpclsQueryIconData(somSelf,pIconInfo) \
  ((( somTD_M_WPObject_wpclsQueryIconData ) \
    M_CWBitmap_parent_M_WPBitmap_wpclsQueryIconData_resolved) \
	 (somSelf,pIconInfo))
#ifndef SOMGD_pmc_M_WPBitmap_wpclsQueryIconData
  #ifdef parent_M_WPBitmap_wpclsQueryIconData
     #undef parent_M_WPBitmap_wpclsQueryIconData
     #define SOMGD_pmc_M_WPBitmap_wpclsQueryIconData 1
  #else
     #define parent_M_WPBitmap_wpclsQueryIconData M_CWBitmap_parent_M_WPBitmap_wpclsQueryIconData
  #endif /* parent_M_WPBitmap_wpclsQueryIconData */
#endif /* SOMGD_pmc_M_WPBitmap_wpclsQueryIconData */
#ifndef parent_wpclsQueryIconData
     #define parent_wpclsQueryIconData M_CWBitmap_parent_M_WPBitmap_wpclsQueryIconData
#endif  /* parent_wpclsQueryIconData */
#define M_CWBitmap_parents_wpclsQueryIconData(somSelf,pIconInfo) (\
   M_CWBitmap_parent_M_WPBitmap_wpclsQueryIconData(somSelf,pIconInfo))

/*
 * Overridden method: wpclsQueryDetailsInfo
 */
#pragma linkage(cwbmpM_wpclsQueryDetailsInfo, system)
SOM_Scope ULONG  SOMLINK cwbmpM_wpclsQueryDetailsInfo(M_CWBitmap *somSelf,
		PCLASSFIELDINFO* ppClassFieldInfo,
		PULONG pSize);
static char *somMN_M_CWBitmapwpclsQueryDetailsInfo = "M_WPObject::wpclsQueryDetailsInfo";
static somId somId_M_CWBitmapwpclsQueryDetailsInfo = &somMN_M_CWBitmapwpclsQueryDetailsInfo;
#ifdef somId_wpclsQueryDetailsInfo
#undef somId_wpclsQueryDetailsInfo
#else
#define somId_wpclsQueryDetailsInfo somId_M_CWBitmapwpclsQueryDetailsInfo
#endif
static somMethodProc* M_CWBitmap_parent_M_WPBitmap_wpclsQueryDetailsInfo_resolved;
#define M_CWBitmap_parent_M_WPBitmap_wpclsQueryDetailsInfo(somSelf,ppClassFieldInfo,pSize) \
  ((( somTD_M_WPObject_wpclsQueryDetailsInfo ) \
    M_CWBitmap_parent_M_WPBitmap_wpclsQueryDetailsInfo_resolved) \
	 (somSelf,ppClassFieldInfo,pSize))
#ifndef SOMGD_pmc_M_WPBitmap_wpclsQueryDetailsInfo
  #ifdef parent_M_WPBitmap_wpclsQueryDetailsInfo
     #undef parent_M_WPBitmap_wpclsQueryDetailsInfo
     #define SOMGD_pmc_M_WPBitmap_wpclsQueryDetailsInfo 1
  #else
     #define parent_M_WPBitmap_wpclsQueryDetailsInfo M_CWBitmap_parent_M_WPBitmap_wpclsQueryDetailsInfo
  #endif /* parent_M_WPBitmap_wpclsQueryDetailsInfo */
#endif /* SOMGD_pmc_M_WPBitmap_wpclsQueryDetailsInfo */
#ifndef parent_wpclsQueryDetailsInfo
     #define parent_wpclsQueryDetailsInfo M_CWBitmap_parent_M_WPBitmap_wpclsQueryDetailsInfo
#endif  /* parent_wpclsQueryDetailsInfo */
#define M_CWBitmap_parents_wpclsQueryDetailsInfo(somSelf,ppClassFieldInfo,pSize) (\
   M_CWBitmap_parent_M_WPBitmap_wpclsQueryDetailsInfo(somSelf,ppClassFieldInfo,pSize))

/*
 * Overridden method: wpclsInitData
 */
#pragma linkage(cwbmpM_wpclsInitData, system)
SOM_Scope void  SOMLINK cwbmpM_wpclsInitData(M_CWBitmap *somSelf);
static char *somMN_M_CWBitmapwpclsInitData = "M_WPObject::wpclsInitData";
static somId somId_M_CWBitmapwpclsInitData = &somMN_M_CWBitmapwpclsInitData;
#ifdef somId_wpclsInitData
#undef somId_wpclsInitData
#else
#define somId_wpclsInitData somId_M_CWBitmapwpclsInitData
#endif
static somMethodProc* M_CWBitmap_parent_M_WPBitmap_wpclsInitData_resolved;
#define M_CWBitmap_parent_M_WPBitmap_wpclsInitData(somSelf) \
  ((( somTD_M_WPObject_wpclsInitData ) \
    M_CWBitmap_parent_M_WPBitmap_wpclsInitData_resolved) \
	 (somSelf))
#ifndef SOMGD_pmc_M_WPBitmap_wpclsInitData
  #ifdef parent_M_WPBitmap_wpclsInitData
     #undef parent_M_WPBitmap_wpclsInitData
     #define SOMGD_pmc_M_WPBitmap_wpclsInitData 1
  #else
     #define parent_M_WPBitmap_wpclsInitData M_CWBitmap_parent_M_WPBitmap_wpclsInitData
  #endif /* parent_M_WPBitmap_wpclsInitData */
#endif /* SOMGD_pmc_M_WPBitmap_wpclsInitData */
#ifndef parent_wpclsInitData
     #define parent_wpclsInitData M_CWBitmap_parent_M_WPBitmap_wpclsInitData
#endif  /* parent_wpclsInitData */
#define M_CWBitmap_parents_wpclsInitData(somSelf) (\
   M_CWBitmap_parent_M_WPBitmap_wpclsInitData(somSelf))

/*
 * Initialize the class data structure
 */
SOMEXTERN struct M_CWBitmapClassDataStructure SOMDLINK M_CWBitmapClassData = {(SOMAny *) NULL};

/*
 * Define the C class data structure
 */
SOMEXTERN struct M_CWBitmapCClassDataStructure SOMDLINK M_CWBitmapCClassData = {(somMethodTabs) NULL};

/*
 * Routines and Structures to create the class object
 */


/*
 * Declare the Override Methods table.
 */
static somOverrideMethod_t M_CWBitmapOM[] = {
    {    &somId_M_CWBitmapwpclsQueryDefaultView,
         (somMethodProc *) cwbmpM_wpclsQueryDefaultView    },
    {    &somId_M_CWBitmapwpclsQueryIconData,
         (somMethodProc *) cwbmpM_wpclsQueryIconData    },
    {    &somId_M_CWBitmapwpclsQueryDetailsInfo,
         (somMethodProc *) cwbmpM_wpclsQueryDetailsInfo    },
    {    &somId_M_CWBitmapwpclsInitData,
         (somMethodProc *) cwbmpM_wpclsInitData    },
};


/*
 *  Initializers for class Ids
 */
static char * somCN_M_CWBitmap = "M_CWBitmap";
static char * somPCN_M_CWBitmap_M_WPBitmap = "M_WPBitmap";

static somId somPCM_CWBitmap[] = {
    &somPCN_M_CWBitmap_M_WPBitmap,
};

static somStaticClassInfo M_CWBitmapSCI = {
    4, 0, 4, 0, 0, 0,
    M_CWBitmap_MajorVersion, M_CWBitmap_MinorVersion,
    0, M_CWBitmap_MaxNoMethods, 1,
    &somCN_M_CWBitmap,
    (somId) NULL, 1,
    somPCM_CWBitmap,
    (somClassDataStructure *) &M_CWBitmapClassData,
    (somCClassDataStructure *) &M_CWBitmapCClassData,
    (somStaticMethod_t *) NULL, M_CWBitmapOM,
    (char *) NULL,
    (somNonInternalData_t *) NULL,  (somProcMethods_t *) NULL,
    (somVarargsFuncs_t *) NULL,
    (somTP_somClassInitFunc *) NULL,
    0, /* type code alignment */
    -1, /* use parents as directinitclasses */
    0, /* no explicit directinitclasses */
    0, /* number of general method entries */
    (somMethods_t *) NULL,
    0, /* no public data offset */
    0, /* no sci development level check */
    0, /* number of SelectInheritedMethods */
    0, /* no SelectInheritedMethods */
    0, /* number of classdata entries */
    0, /* no entry names provided currently */
    0, /* number of migrated methods */
    0, /* no migrated method implementations */
    0, /* number of initializers */
    0, /* no initializers */
    0, /* used to identify a DTS class */
    0, /* used to register dynamically computed info */
};


/*
 * Class Creation and Initialization
 */

SOMClass * SOMLINK M_CWBitmapNewClass (integer4 somtmajorVersion,
		integer4 somtminorVersion)
{
    SOMClass *result;
    M_WPBitmapNewClass(M_WPBitmap_MajorVersion,M_WPBitmap_MinorVersion);	/* static reference */
    result = somBuildClass(1,&M_CWBitmapSCI, somtmajorVersion, somtminorVersion);
    M_CWBitmap_parent_M_WPBitmap_wpclsInitData_resolved = 
	somParentNumResolve(M_CWBitmapCClassData.parentMtab, 1, M_WPObjectClassData.wpclsInitData); 
    M_CWBitmap_parent_M_WPBitmap_wpclsQueryDetailsInfo_resolved = 
	somParentNumResolve(M_CWBitmapCClassData.parentMtab, 1, M_WPObjectClassData.wpclsQueryDetailsInfo); 
    M_CWBitmap_parent_M_WPBitmap_wpclsQueryIconData_resolved = 
	somParentNumResolve(M_CWBitmapCClassData.parentMtab, 1, M_WPObjectClassData.wpclsQueryIconData); 
    M_CWBitmap_parent_M_WPBitmap_wpclsQueryDefaultView_resolved = 
	somParentNumResolve(M_CWBitmapCClassData.parentMtab, 1, M_WPObjectClassData.wpclsQueryDefaultView); 
    return result;
}

/*
 * Functions for attributes.
 */

#endif /* Primary Implementation Support */
#pragma checkout(resume)

#endif       /* SOM_M_CWBitmap_ih */
