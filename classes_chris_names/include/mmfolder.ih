
/*
 * This file was generated by the SOM Compiler.
 * FileName: include\mmfolder.ih.
 * Generated using:
 *     SOM Precompiler somipc: 2.29.1.7
 *     SOM Emitter emitih: 2.42
 */

/*
 * 
 * mmfolder.idl:
 * 
 * 
 */


/*
 * -- By default, for classes declared using IDL,
 * -- this emitter doesn't define redispatch/apply stubs.
 * -- Instead, it requests that the SOM kernel produce them.
 * -- To override this default, use the "notc" modifier.
 */

#ifndef SOM_MMFolder_ih
#define SOM_MMFolder_ih

#pragma checkout(suspend)

#include <mmfolder.h>

/*
 * Set the scope of methods functions
 */
#ifndef SOM_Scope
#ifdef __cplusplus
  #define SOM_Scope extern "C"
#else
  #define SOM_Scope extern
#endif  /* __cplusplus */
#endif  /* SOM_Scope */

#ifndef SOM_CurrentClass
    #define SOM_CurrentClass MMFolderCClassData.parentMtab
#endif  /* SOM_CurrentClass */

#define MMFolder_MaxNoMethods 0

/*
 * -- Instance data
 */
typedef struct {
	PFNWP oldFrameProc;
	PFNWP oldContainerProc;
	ULONG ulCurrentSize;
	ULONG usLastSelMenuItem;
} MMFolderData;

/*
 * GetData macro
 */

/*
 * -- This emitter treats Data Tokens as Thunks by default.
 * -- Use the sc modifier "nothunks" to override this default.
 */
typedef MMFolderData* SOMLINK somTP_MMFolder_DataThunk(void*);
#ifdef __IBMC__
#pragma linkage(somTP_MMFolder_DataThunk, system)
#endif
typedef somTP_MMFolder_DataThunk *somTD_MMFolder_DataThunk;

#define MMFolderGetData(somSelf) \
   (((somTD_MMFolder_DataThunk)(MMFolderCClassData.instanceDataToken))(somSelf))

/*
 * Instance variable and staticdata access macros
 */
#ifndef NO_VARIABLE_MACROS
#define _oldFrameProc (somThis->oldFrameProc)
#define _oldContainerProc (somThis->oldContainerProc)
#define _ulCurrentSize (somThis->ulCurrentSize)
#define _usLastSelMenuItem (somThis->usLastSelMenuItem)
#endif

/*
 * Primary Implementation File Support
 */
#if (defined(MMFolder_Class_Source) || defined(SOM_Module_mmfolder_Source))

/*
 * Trace/Debug macro
 */
#ifndef MMFolderMethodDebug
   #define MMFolderMethodDebug(c,m) SOMMethodDebug(c,m)
#endif  /* MMFolderMethodDebug */

/*
 * Current class macros for Instance and Meta classes.
 */
#undef SOMMeta
#define SOMMeta M_MMFolderCClassData.parentMtab
#undef SOMInstance
#define SOMInstance MMFolderCClassData.parentMtab

#ifndef M_MMFolder_Class_Source
   #define M_MMFolder_Class_Source
#endif    /* M_MMFolder_Class_Source */

/*
 * Overridden method: wpOpen
 */
#pragma linkage(mmfldr_wpOpen, system)
SOM_Scope HWND  SOMLINK mmfldr_wpOpen(MMFolder *somSelf,
		HWND hwndCnr,
		ULONG ulView,
		ULONG param);
static char *somMN_MMFolderwpOpen = "WPObject::wpOpen";
static somId somId_MMFolderwpOpen = &somMN_MMFolderwpOpen;
#ifdef somId_wpOpen
#undef somId_wpOpen
#else
#define somId_wpOpen somId_MMFolderwpOpen
#endif
static somMethodProc* MMFolder_parent_WPFolder_wpOpen_resolved;
#define MMFolder_parent_WPFolder_wpOpen(somSelf,hwndCnr,ulView,param) \
  ((( somTD_WPObject_wpOpen ) \
    MMFolder_parent_WPFolder_wpOpen_resolved) \
	 (somSelf,hwndCnr,ulView,param))
#ifndef SOMGD_pmc_WPFolder_wpOpen
  #ifdef parent_WPFolder_wpOpen
     #undef parent_WPFolder_wpOpen
     #define SOMGD_pmc_WPFolder_wpOpen 1
  #else
     #define parent_WPFolder_wpOpen MMFolder_parent_WPFolder_wpOpen
  #endif /* parent_WPFolder_wpOpen */
#endif /* SOMGD_pmc_WPFolder_wpOpen */
#ifndef parent_wpOpen
     #define parent_wpOpen MMFolder_parent_WPFolder_wpOpen
#endif  /* parent_wpOpen */
#define MMFolder_parents_wpOpen(somSelf,hwndCnr,ulView,param) (\
   MMFolder_parent_WPFolder_wpOpen(somSelf,hwndCnr,ulView,param))

/*
 * Overridden method: wpRestoreState
 */
#pragma linkage(mmfldr_wpRestoreState, system)
SOM_Scope BOOL  SOMLINK mmfldr_wpRestoreState(MMFolder *somSelf,
		ULONG ulReserved);
static char *somMN_MMFolderwpRestoreState = "WPObject::wpRestoreState";
static somId somId_MMFolderwpRestoreState = &somMN_MMFolderwpRestoreState;
#ifdef somId_wpRestoreState
#undef somId_wpRestoreState
#else
#define somId_wpRestoreState somId_MMFolderwpRestoreState
#endif
static somMethodProc* MMFolder_parent_WPFolder_wpRestoreState_resolved;
#define MMFolder_parent_WPFolder_wpRestoreState(somSelf,ulReserved) \
  ((( somTD_WPObject_wpRestoreState ) \
    MMFolder_parent_WPFolder_wpRestoreState_resolved) \
	 (somSelf,ulReserved))
#ifndef SOMGD_pmc_WPFolder_wpRestoreState
  #ifdef parent_WPFolder_wpRestoreState
     #undef parent_WPFolder_wpRestoreState
     #define SOMGD_pmc_WPFolder_wpRestoreState 1
  #else
     #define parent_WPFolder_wpRestoreState MMFolder_parent_WPFolder_wpRestoreState
  #endif /* parent_WPFolder_wpRestoreState */
#endif /* SOMGD_pmc_WPFolder_wpRestoreState */
#ifndef parent_wpRestoreState
     #define parent_wpRestoreState MMFolder_parent_WPFolder_wpRestoreState
#endif  /* parent_wpRestoreState */
#define MMFolder_parents_wpRestoreState(somSelf,ulReserved) (\
   MMFolder_parent_WPFolder_wpRestoreState(somSelf,ulReserved))

/*
 * Overridden method: wpSaveState
 */
#pragma linkage(mmfldr_wpSaveState, system)
SOM_Scope BOOL  SOMLINK mmfldr_wpSaveState(MMFolder *somSelf);
static char *somMN_MMFolderwpSaveState = "WPObject::wpSaveState";
static somId somId_MMFolderwpSaveState = &somMN_MMFolderwpSaveState;
#ifdef somId_wpSaveState
#undef somId_wpSaveState
#else
#define somId_wpSaveState somId_MMFolderwpSaveState
#endif
static somMethodProc* MMFolder_parent_WPFolder_wpSaveState_resolved;
#define MMFolder_parent_WPFolder_wpSaveState(somSelf) \
  ((( somTD_WPObject_wpSaveState ) \
    MMFolder_parent_WPFolder_wpSaveState_resolved) \
	 (somSelf))
#ifndef SOMGD_pmc_WPFolder_wpSaveState
  #ifdef parent_WPFolder_wpSaveState
     #undef parent_WPFolder_wpSaveState
     #define SOMGD_pmc_WPFolder_wpSaveState 1
  #else
     #define parent_WPFolder_wpSaveState MMFolder_parent_WPFolder_wpSaveState
  #endif /* parent_WPFolder_wpSaveState */
#endif /* SOMGD_pmc_WPFolder_wpSaveState */
#ifndef parent_wpSaveState
     #define parent_wpSaveState MMFolder_parent_WPFolder_wpSaveState
#endif  /* parent_wpSaveState */
#define MMFolder_parents_wpSaveState(somSelf) (\
   MMFolder_parent_WPFolder_wpSaveState(somSelf))

/*
 * Overridden method: wpMenuItemSelected
 */
#pragma linkage(mmfldr_wpMenuItemSelected, system)
SOM_Scope BOOL  SOMLINK mmfldr_wpMenuItemSelected(MMFolder *somSelf,
		HWND hwndFrame,
		ULONG ulMenuId);
static char *somMN_MMFolderwpMenuItemSelected = "WPObject::wpMenuItemSelected";
static somId somId_MMFolderwpMenuItemSelected = &somMN_MMFolderwpMenuItemSelected;
#ifdef somId_wpMenuItemSelected
#undef somId_wpMenuItemSelected
#else
#define somId_wpMenuItemSelected somId_MMFolderwpMenuItemSelected
#endif
static somMethodProc* MMFolder_parent_WPFolder_wpMenuItemSelected_resolved;
#define MMFolder_parent_WPFolder_wpMenuItemSelected(somSelf,hwndFrame,ulMenuId) \
  ((( somTD_WPObject_wpMenuItemSelected ) \
    MMFolder_parent_WPFolder_wpMenuItemSelected_resolved) \
	 (somSelf,hwndFrame,ulMenuId))
#ifndef SOMGD_pmc_WPFolder_wpMenuItemSelected
  #ifdef parent_WPFolder_wpMenuItemSelected
     #undef parent_WPFolder_wpMenuItemSelected
     #define SOMGD_pmc_WPFolder_wpMenuItemSelected 1
  #else
     #define parent_WPFolder_wpMenuItemSelected MMFolder_parent_WPFolder_wpMenuItemSelected
  #endif /* parent_WPFolder_wpMenuItemSelected */
#endif /* SOMGD_pmc_WPFolder_wpMenuItemSelected */
#ifndef parent_wpMenuItemSelected
     #define parent_wpMenuItemSelected MMFolder_parent_WPFolder_wpMenuItemSelected
#endif  /* parent_wpMenuItemSelected */
#define MMFolder_parents_wpMenuItemSelected(somSelf,hwndFrame,ulMenuId) (\
   MMFolder_parent_WPFolder_wpMenuItemSelected(somSelf,hwndFrame,ulMenuId))

/*
 * Overridden method: wpObjectReady
 */
#pragma linkage(mmfldr_wpObjectReady, system)
SOM_Scope void  SOMLINK mmfldr_wpObjectReady(MMFolder *somSelf,
		ULONG ulCode,
		WPObject* refObject);
static char *somMN_MMFolderwpObjectReady = "WPObject::wpObjectReady";
static somId somId_MMFolderwpObjectReady = &somMN_MMFolderwpObjectReady;
#ifdef somId_wpObjectReady
#undef somId_wpObjectReady
#else
#define somId_wpObjectReady somId_MMFolderwpObjectReady
#endif
static somMethodProc* MMFolder_parent_WPFolder_wpObjectReady_resolved;
#define MMFolder_parent_WPFolder_wpObjectReady(somSelf,ulCode,refObject) \
  ((( somTD_WPObject_wpObjectReady ) \
    MMFolder_parent_WPFolder_wpObjectReady_resolved) \
	 (somSelf,ulCode,refObject))
#ifndef SOMGD_pmc_WPFolder_wpObjectReady
  #ifdef parent_WPFolder_wpObjectReady
     #undef parent_WPFolder_wpObjectReady
     #define SOMGD_pmc_WPFolder_wpObjectReady 1
  #else
     #define parent_WPFolder_wpObjectReady MMFolder_parent_WPFolder_wpObjectReady
  #endif /* parent_WPFolder_wpObjectReady */
#endif /* SOMGD_pmc_WPFolder_wpObjectReady */
#ifndef parent_wpObjectReady
     #define parent_wpObjectReady MMFolder_parent_WPFolder_wpObjectReady
#endif  /* parent_wpObjectReady */
#define MMFolder_parents_wpObjectReady(somSelf,ulCode,refObject) (\
   MMFolder_parent_WPFolder_wpObjectReady(somSelf,ulCode,refObject))

/*
 * Initialize the class data structure
 */
SOMEXTERN struct MMFolderClassDataStructure SOMDLINK MMFolderClassData = {(SOMAny *) NULL};

/*
 * Define the C class data structure
 */
SOMEXTERN struct MMFolderCClassDataStructure SOMDLINK MMFolderCClassData = {(somMethodTabs) NULL};

/*
 * Routines and Structures to create the class object
 */


/*
 * Declare the Override Methods table.
 */
static somOverrideMethod_t MMFolderOM[] = {
    {    &somId_MMFolderwpOpen,
         (somMethodProc *) mmfldr_wpOpen    },
    {    &somId_MMFolderwpRestoreState,
         (somMethodProc *) mmfldr_wpRestoreState    },
    {    &somId_MMFolderwpSaveState,
         (somMethodProc *) mmfldr_wpSaveState    },
    {    &somId_MMFolderwpMenuItemSelected,
         (somMethodProc *) mmfldr_wpMenuItemSelected    },
    {    &somId_MMFolderwpObjectReady,
         (somMethodProc *) mmfldr_wpObjectReady    },
};


/*
 *  Initializers for class Ids
 */
static char * somCN_MMFolder = "MMFolder";
#ifndef somEMC_M_MMFolder_defined
#define somEMC_M_MMFolder_defined
static char * somEMC_M_MMFolder = "M_MMFolder";
#endif
static char * somPCN_MMFolder_WPFolder = "WPFolder";

static somId somPCMMFolder[] = {
    &somPCN_MMFolder_WPFolder,
};

static somStaticClassInfo MMFolderSCI = {
    4, 0, 5, 0, 0, 0,
    MMFolder_MajorVersion, MMFolder_MinorVersion,
    sizeof(MMFolderData), MMFolder_MaxNoMethods, 1,
    &somCN_MMFolder,
    &somEMC_M_MMFolder, 0,
    somPCMMFolder,
    (somClassDataStructure *) &MMFolderClassData,
    (somCClassDataStructure *) &MMFolderCClassData,
    (somStaticMethod_t *) NULL, MMFolderOM,
    (char *) NULL,
    (somNonInternalData_t *) NULL,  (somProcMethods_t *) NULL,
    (somVarargsFuncs_t *) NULL,
    (somTP_somClassInitFunc *) NULL,
    4, /* type code alignment */
    -1, /* use parents as directinitclasses */
    0, /* no explicit directinitclasses */
    0, /* number of general method entries */
    (somMethods_t *) NULL,
    0, /* no public data offset */
    0, /* no sci development level check */
    0, /* number of SelectInheritedMethods */
    0, /* no SelectInheritedMethods */
    0, /* number of classdata entries */
    0, /* no entry names provided currently */
    0, /* number of migrated methods */
    0, /* no migrated method implementations */
    0, /* number of initializers */
    0, /* no initializers */
    0, /* used to identify a DTS class */
    0, /* used to register dynamically computed info */
};


/*
 * Class Creation and Initialization
 */

SOMClass * SOMLINK MMFolderNewClass (integer4 somtmajorVersion,
		integer4 somtminorVersion)
{
    SOMClass *result;
    WPFolderNewClass(WPFolder_MajorVersion,WPFolder_MinorVersion);	/* static reference */
    /* Explicit metaclass, so get it */ 
    M_MMFolderNewClass(M_MMFolder_MajorVersion,M_MMFolder_MinorVersion);	/* static reference */
    result = somBuildClass(1,&MMFolderSCI, somtmajorVersion, somtminorVersion);
    MMFolder_parent_WPFolder_wpObjectReady_resolved = 
	somParentNumResolve(MMFolderCClassData.parentMtab, 1, WPObjectClassData.wpObjectReady); 
    MMFolder_parent_WPFolder_wpMenuItemSelected_resolved = 
	somParentNumResolve(MMFolderCClassData.parentMtab, 1, WPObjectClassData.wpMenuItemSelected); 
    MMFolder_parent_WPFolder_wpSaveState_resolved = 
	somParentNumResolve(MMFolderCClassData.parentMtab, 1, WPObjectClassData.wpSaveState); 
    MMFolder_parent_WPFolder_wpRestoreState_resolved = 
	somParentNumResolve(MMFolderCClassData.parentMtab, 1, WPObjectClassData.wpRestoreState); 
    MMFolder_parent_WPFolder_wpOpen_resolved = 
	somParentNumResolve(MMFolderCClassData.parentMtab, 1, WPObjectClassData.wpOpen); 
    return result;
}

/*
 * Functions for attributes.
 */

#endif /* Primary Implementation Support */
#pragma checkout(resume)

#endif       /* SOM_MMFolder_ih */

/*
 * -- By default, for classes declared using IDL,
 * -- this emitter doesn't define redispatch/apply stubs.
 * -- Instead, it requests that the SOM kernel produce them.
 * -- To override this default, use the "notc" modifier.
 */

#ifndef SOM_M_MMFolder_ih
#define SOM_M_MMFolder_ih

#pragma checkout(suspend)

#include <mmfolder.h>

/*
 * Set the scope of methods functions
 */
#ifndef SOM_Scope
#ifdef __cplusplus
  #define SOM_Scope extern "C"
#else
  #define SOM_Scope extern
#endif  /* __cplusplus */
#endif  /* SOM_Scope */

#ifndef SOM_CurrentClass
    #define SOM_CurrentClass M_MMFolderCClassData.parentMtab
#endif  /* SOM_CurrentClass */

#define M_MMFolder_MaxNoMethods 0

/*
 * -- Instance data
 */
typedef void M_MMFolderData;

/*
 * This class introduces no instance data, so no GetData macro is provided
 */

/*
 * Primary Implementation File Support
 */
#if (defined(MMFolder_Class_Source) || defined(M_MMFolder_Class_Source) || defined(SOM_Module_mmfolder_Source))

/*
 * Trace/Debug macro
 */
#ifndef M_MMFolderMethodDebug
   #define M_MMFolderMethodDebug(c,m) SOMMethodDebug(c,m)
#endif  /* M_MMFolderMethodDebug */

/*
 * Current class macros for Instance and Meta classes.
 */

/*
 * Overridden method: wpclsQueryTitle
 */
#pragma linkage(mmfldrM_wpclsQueryTitle, system)
SOM_Scope PSZ  SOMLINK mmfldrM_wpclsQueryTitle(M_MMFolder *somSelf);
static char *somMN_M_MMFolderwpclsQueryTitle = "M_WPObject::wpclsQueryTitle";
static somId somId_M_MMFolderwpclsQueryTitle = &somMN_M_MMFolderwpclsQueryTitle;
#ifdef somId_wpclsQueryTitle
#undef somId_wpclsQueryTitle
#else
#define somId_wpclsQueryTitle somId_M_MMFolderwpclsQueryTitle
#endif
static somMethodProc* M_MMFolder_parent_M_WPFolder_wpclsQueryTitle_resolved;
#define M_MMFolder_parent_M_WPFolder_wpclsQueryTitle(somSelf) \
  ((( somTD_M_WPObject_wpclsQueryTitle ) \
    M_MMFolder_parent_M_WPFolder_wpclsQueryTitle_resolved) \
	 (somSelf))
#ifndef SOMGD_pmc_M_WPFolder_wpclsQueryTitle
  #ifdef parent_M_WPFolder_wpclsQueryTitle
     #undef parent_M_WPFolder_wpclsQueryTitle
     #define SOMGD_pmc_M_WPFolder_wpclsQueryTitle 1
  #else
     #define parent_M_WPFolder_wpclsQueryTitle M_MMFolder_parent_M_WPFolder_wpclsQueryTitle
  #endif /* parent_M_WPFolder_wpclsQueryTitle */
#endif /* SOMGD_pmc_M_WPFolder_wpclsQueryTitle */
#ifndef parent_wpclsQueryTitle
     #define parent_wpclsQueryTitle M_MMFolder_parent_M_WPFolder_wpclsQueryTitle
#endif  /* parent_wpclsQueryTitle */
#define M_MMFolder_parents_wpclsQueryTitle(somSelf) (\
   M_MMFolder_parent_M_WPFolder_wpclsQueryTitle(somSelf))

/*
 * Overridden method: wpclsQueryIconData
 */
#pragma linkage(mmfldrM_wpclsQueryIconData, system)
SOM_Scope ULONG  SOMLINK mmfldrM_wpclsQueryIconData(M_MMFolder *somSelf,
		PICONINFO pIconInfo);
static char *somMN_M_MMFolderwpclsQueryIconData = "M_WPObject::wpclsQueryIconData";
static somId somId_M_MMFolderwpclsQueryIconData = &somMN_M_MMFolderwpclsQueryIconData;
#ifdef somId_wpclsQueryIconData
#undef somId_wpclsQueryIconData
#else
#define somId_wpclsQueryIconData somId_M_MMFolderwpclsQueryIconData
#endif
static somMethodProc* M_MMFolder_parent_M_WPFolder_wpclsQueryIconData_resolved;
#define M_MMFolder_parent_M_WPFolder_wpclsQueryIconData(somSelf,pIconInfo) \
  ((( somTD_M_WPObject_wpclsQueryIconData ) \
    M_MMFolder_parent_M_WPFolder_wpclsQueryIconData_resolved) \
	 (somSelf,pIconInfo))
#ifndef SOMGD_pmc_M_WPFolder_wpclsQueryIconData
  #ifdef parent_M_WPFolder_wpclsQueryIconData
     #undef parent_M_WPFolder_wpclsQueryIconData
     #define SOMGD_pmc_M_WPFolder_wpclsQueryIconData 1
  #else
     #define parent_M_WPFolder_wpclsQueryIconData M_MMFolder_parent_M_WPFolder_wpclsQueryIconData
  #endif /* parent_M_WPFolder_wpclsQueryIconData */
#endif /* SOMGD_pmc_M_WPFolder_wpclsQueryIconData */
#ifndef parent_wpclsQueryIconData
     #define parent_wpclsQueryIconData M_MMFolder_parent_M_WPFolder_wpclsQueryIconData
#endif  /* parent_wpclsQueryIconData */
#define M_MMFolder_parents_wpclsQueryIconData(somSelf,pIconInfo) (\
   M_MMFolder_parent_M_WPFolder_wpclsQueryIconData(somSelf,pIconInfo))

/*
 * Overridden method: wpclsQueryIconDataN
 */
#pragma linkage(mmfldrM_wpclsQueryIconDataN, system)
SOM_Scope ULONG  SOMLINK mmfldrM_wpclsQueryIconDataN(M_MMFolder *somSelf,
		ICONINFO* pIconInfo,
		ULONG ulIconIndex);
static char *somMN_M_MMFolderwpclsQueryIconDataN = "M_WPFolder::wpclsQueryIconDataN";
static somId somId_M_MMFolderwpclsQueryIconDataN = &somMN_M_MMFolderwpclsQueryIconDataN;
#ifdef somId_wpclsQueryIconDataN
#undef somId_wpclsQueryIconDataN
#else
#define somId_wpclsQueryIconDataN somId_M_MMFolderwpclsQueryIconDataN
#endif
static somMethodProc* M_MMFolder_parent_M_WPFolder_wpclsQueryIconDataN_resolved;
#define M_MMFolder_parent_M_WPFolder_wpclsQueryIconDataN(somSelf,pIconInfo,ulIconIndex) \
  ((( somTD_M_WPFolder_wpclsQueryIconDataN ) \
    M_MMFolder_parent_M_WPFolder_wpclsQueryIconDataN_resolved) \
	 (somSelf,pIconInfo,ulIconIndex))
#ifndef SOMGD_pmc_M_WPFolder_wpclsQueryIconDataN
  #ifdef parent_M_WPFolder_wpclsQueryIconDataN
     #undef parent_M_WPFolder_wpclsQueryIconDataN
     #define SOMGD_pmc_M_WPFolder_wpclsQueryIconDataN 1
  #else
     #define parent_M_WPFolder_wpclsQueryIconDataN M_MMFolder_parent_M_WPFolder_wpclsQueryIconDataN
  #endif /* parent_M_WPFolder_wpclsQueryIconDataN */
#endif /* SOMGD_pmc_M_WPFolder_wpclsQueryIconDataN */
#ifndef parent_wpclsQueryIconDataN
     #define parent_wpclsQueryIconDataN M_MMFolder_parent_M_WPFolder_wpclsQueryIconDataN
#endif  /* parent_wpclsQueryIconDataN */
#define M_MMFolder_parents_wpclsQueryIconDataN(somSelf,pIconInfo,ulIconIndex) (\
   M_MMFolder_parent_M_WPFolder_wpclsQueryIconDataN(somSelf,pIconInfo,ulIconIndex))

/*
 * Initialize the class data structure
 */
SOMEXTERN struct M_MMFolderClassDataStructure SOMDLINK M_MMFolderClassData = {(SOMAny *) NULL};

/*
 * Define the C class data structure
 */
SOMEXTERN struct M_MMFolderCClassDataStructure SOMDLINK M_MMFolderCClassData = {(somMethodTabs) NULL};

/*
 * Routines and Structures to create the class object
 */


/*
 * Declare the Override Methods table.
 */
static somOverrideMethod_t M_MMFolderOM[] = {
    {    &somId_M_MMFolderwpclsQueryTitle,
         (somMethodProc *) mmfldrM_wpclsQueryTitle    },
    {    &somId_M_MMFolderwpclsQueryIconData,
         (somMethodProc *) mmfldrM_wpclsQueryIconData    },
    {    &somId_M_MMFolderwpclsQueryIconDataN,
         (somMethodProc *) mmfldrM_wpclsQueryIconDataN    },
};


/*
 *  Initializers for class Ids
 */
static char * somCN_M_MMFolder = "M_MMFolder";
static char * somPCN_M_MMFolder_M_WPFolder = "M_WPFolder";

static somId somPCM_MMFolder[] = {
    &somPCN_M_MMFolder_M_WPFolder,
};

static somStaticClassInfo M_MMFolderSCI = {
    4, 0, 3, 0, 0, 0,
    M_MMFolder_MajorVersion, M_MMFolder_MinorVersion,
    0, M_MMFolder_MaxNoMethods, 1,
    &somCN_M_MMFolder,
    (somId) NULL, 1,
    somPCM_MMFolder,
    (somClassDataStructure *) &M_MMFolderClassData,
    (somCClassDataStructure *) &M_MMFolderCClassData,
    (somStaticMethod_t *) NULL, M_MMFolderOM,
    (char *) NULL,
    (somNonInternalData_t *) NULL,  (somProcMethods_t *) NULL,
    (somVarargsFuncs_t *) NULL,
    (somTP_somClassInitFunc *) NULL,
    0, /* type code alignment */
    -1, /* use parents as directinitclasses */
    0, /* no explicit directinitclasses */
    0, /* number of general method entries */
    (somMethods_t *) NULL,
    0, /* no public data offset */
    0, /* no sci development level check */
    0, /* number of SelectInheritedMethods */
    0, /* no SelectInheritedMethods */
    0, /* number of classdata entries */
    0, /* no entry names provided currently */
    0, /* number of migrated methods */
    0, /* no migrated method implementations */
    0, /* number of initializers */
    0, /* no initializers */
    0, /* used to identify a DTS class */
    0, /* used to register dynamically computed info */
};


/*
 * Class Creation and Initialization
 */

SOMClass * SOMLINK M_MMFolderNewClass (integer4 somtmajorVersion,
		integer4 somtminorVersion)
{
    SOMClass *result;
    M_WPFolderNewClass(M_WPFolder_MajorVersion,M_WPFolder_MinorVersion);	/* static reference */
    result = somBuildClass(1,&M_MMFolderSCI, somtmajorVersion, somtminorVersion);
    M_MMFolder_parent_M_WPFolder_wpclsQueryIconDataN_resolved = 
	somParentNumResolve(M_MMFolderCClassData.parentMtab, 1, M_WPFolderClassData.wpclsQueryIconDataN); 
    M_MMFolder_parent_M_WPFolder_wpclsQueryIconData_resolved = 
	somParentNumResolve(M_MMFolderCClassData.parentMtab, 1, M_WPObjectClassData.wpclsQueryIconData); 
    M_MMFolder_parent_M_WPFolder_wpclsQueryTitle_resolved = 
	somParentNumResolve(M_MMFolderCClassData.parentMtab, 1, M_WPObjectClassData.wpclsQueryTitle); 
    return result;
}

/*
 * Functions for attributes.
 */

#endif /* Primary Implementation Support */
#pragma checkout(resume)

#endif       /* SOM_M_MMFolder_ih */
